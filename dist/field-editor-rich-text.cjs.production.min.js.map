{"version":3,"file":"field-editor-rich-text.cjs.production.min.js","sources":["../src/plugins/List/EditListWrapper.js","../src/constants/Schema.js","../src/plugins/shared/PluginApi.js","../src/plugins/shared/ToolbarIcon.js","../src/plugins/shared/PropTypes.js","../src/plugins/shared/UtilHave.js","../src/plugins/shared/MarkPlugin.js","../src/plugins/shared/MarkDecorator.js","../src/plugins/shared/Util.js","../src/plugins/shared/MarkToggleDecorator.js","../src/plugins/Bold/index.js","../src/plugins/Italic/index.js","../src/plugins/Underlined/index.js","../src/plugins/Code/index.js","../src/plugins/shared/BlockToggleDecorator.js","../src/plugins/Quote/Util.js","../src/plugins/shared/NodeDecorator.js","../src/plugins/Quote/QuotePlugin.js","../src/plugins/Quote/index.js","../node_modules/regenerator-runtime/runtime.js","../src/plugins/EmbeddedEntityBlock/FetchingWrappedEntryCard.js","../src/plugins/EmbeddedEntityBlock/FetchingWrappedAssetCard.js","../src/dialogs/HypelinkDialog/HyperlinkDialog.jsx","../src/helpers/getLinkedContentTypeIdsForNodeType.js","../src/helpers/newEntitySelectorConfigFromRichTextField.js","../src/validations/index.js","../src/plugins/Hyperlink/Util.js","../src/plugins/Hyperlink/ToolbarIcon.js","../src/plugins/Hyperlink/styles.js","../src/helpers/browserSupport.js","../src/plugins/Hyperlink/EntityHyperlinkTootip.js","../src/plugins/Hyperlink/truncate.js","../src/plugins/Hyperlink/Hyperlink.js","../src/plugins/Hyperlink/index.js","../src/plugins/Subscript/index.js","../src/plugins/Superscript/index.js","../src/plugins/shared/ToolbarDropdownListItem.js","../src/plugins/shared/BlockSelectDecorator.js","../src/plugins/Heading/HeadingDropdown.js","../src/plugins/Heading/HeadingDropdownItem.js","../src/plugins/Heading/Paragraph.js","../src/plugins/Heading/index.js","../src/plugins/EmbeddedEntityBlock/Util.js","../src/plugins/EmbeddedEntityBlock/ToolbarIcon.js","../src/plugins/EmbeddedEntityBlock/EmbeddedEntityBlock.js","../src/plugins/EmbeddedEntityBlock/index.js","../src/plugins/EmbeddedEntryInline/Utils.js","../src/plugins/EmbeddedEntryInline/ToolbarIcon.js","../src/plugins/EmbeddedEntryInline/FetchingWrappedInlineEntryCard.js","../src/plugins/EmbeddedEntryInline/EmbeddedEntryInline.js","../src/plugins/EmbeddedEntryInline/index.js","../src/plugins/List/ToolbarDecorator.js","../src/plugins/List/index.js","../src/plugins/Hr/index.js","../src/plugins/Paste/Paste.js","../src/plugins/Paste/index.js","../src/plugins/PasteHtml/Serializer.js","../src/plugins/CommandPalette/Util.js","../src/plugins/CommandPalette/CommandPaletteService.js","../src/plugins/CommandPalette/CommandPanel/CommandPanelMenu.js","../src/plugins/CommandPalette/CommandPanel/index.js","../src/plugins/CommandPalette/CommandPalette.js","../src/plugins/CommandPalette/CommandMark.js","../src/plugins/CommandPalette/index.js","../src/plugins/index.js","../src/plugins/InsertBeforeFirstVoidBlock/index.js","../src/plugins/InsertBeforeFirstVoidBlock/Util.js","../src/plugins/Paragraph/index.js","../src/plugins/PasteHtml/index.js","../src/plugins/PasteText/index.js","../src/plugins/NewLinePlugin/index.js","../src/plugins/EntryEmbedDropdown/index.js","../src/Toolbar/index.js","../src/Toolbar/StickyToolbarWrapper.js","../src/RichTextEditor.jsx","../src/dialogs/openRichTextDialog.jsx","../src/dialogs/renderRichTextDialog.jsx"],"sourcesContent":["import { BLOCKS } from '@contentful/rich-text-types';\nimport EditList from '@productboard/slate-edit-list';\n\nexport default opt => {\n  const config = {\n    types: [BLOCKS.OL_LIST, BLOCKS.UL_LIST],\n    typeItem: BLOCKS.LIST_ITEM,\n    typeDefault: BLOCKS.PARAGRAPH,\n    ...opt\n  };\n\n  const plugin = EditList(config);\n\n  return plugin;\n};\n","import fromPairs from 'lodash/fromPairs';\nimport {\n  BLOCKS,\n  INLINES,\n  TOP_LEVEL_BLOCKS,\n  VOID_BLOCKS,\n  CONTAINERS\n} from '@contentful/rich-text-types';\n\nimport ListPlugin from '../plugins/List/EditListWrapper';\n\nconst mapVoidTypes = nodeTypes => {\n  return fromPairs(nodeTypes.map(nodeType => [nodeType, { isVoid: true }]));\n};\n\nconst listPlugin = ListPlugin();\n\nexport default {\n  document: {\n    nodes: [\n      {\n        types: TOP_LEVEL_BLOCKS\n      }\n    ]\n  },\n  blocks: {\n    [BLOCKS.PARAGRAPH]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_1]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_2]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_3]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_4]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_5]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_6]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    ...mapVoidTypes(VOID_BLOCKS),\n    // The schema for the lists and list-items is defined in the slate-edit-list plugin.\n    // Due to the bug in slate@0.44.9 we have to stitch the schema manually.\n    // Related bug ticket AUTH-888\n    ...listPlugin.schema.blocks,\n    [BLOCKS.QUOTE]: {\n      nodes: [\n        {\n          match: [CONTAINERS[BLOCKS.QUOTE].map(type => ({ type }))],\n          min: 1\n        }\n      ],\n      normalize: (editor, error) => {\n        if (error.code === 'child_type_invalid') {\n          return editor.unwrapBlockByKey(error.node.key, BLOCKS.QUOTE);\n        }\n      }\n    }\n  },\n  inlines: {\n    [INLINES.HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text']\n        }\n      ]\n    },\n    [INLINES.ENTRY_HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text']\n        }\n      ]\n    },\n    [INLINES.ASSET_HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text']\n        }\n      ]\n    },\n    [INLINES.EMBEDDED_ENTRY]: {\n      isVoid: true\n    }\n  }\n};\n","import PropTypes from 'prop-types';\n\n/**\n * All known origins for Rich Text actions\n * @type {object}\n */\nexport const actionOrigin = {\n  TOOLBAR: 'toolbar-icon',\n  SHORTCUT: 'shortcut',\n  VIEWPORT: 'viewport-interaction',\n  COMMAND_PALETTE: 'command-palette',\n};\n\nconst createActionLogger = (onAction, origin) => (name, data) => {\n  onAction(name, { origin, ...data });\n};\n\n/**\n * Creates an api that is passed to editor and toolbar widgets.\n *\n * @param {object} sdk\n * @param {function } onAction\n * @returns {{ sdk: {object}, logViewportAction: {function}, createActionLogger: {function}, createActionLogger: {function} }}\n */\nexport const createRichTextAPI = ({ sdk, onAction }) => {\n  const richTextAPI = {\n    sdk,\n    logViewportAction: createActionLogger(onAction, actionOrigin.VIEWPORT),\n    logShortcutAction: createActionLogger(onAction, actionOrigin.SHORTCUT),\n    logToolbarAction: createActionLogger(onAction, actionOrigin.TOOLBAR),\n    logCommandPaletteAction: createActionLogger(onAction, actionOrigin.COMMAND_PALETTE),\n  };\n  return richTextAPI;\n};\n\n/**\n * Describes the prop types a Rich Text editor plugin can expect.\n * @type {object}\n */\nexport const EDITOR_PLUGIN_PROP_TYPES = {\n  richTextAPI: PropTypes.shape({\n    sdk: PropTypes.object.isRequired,\n    logViewportAction: PropTypes.func.isRequired,\n    logShortcutAction: PropTypes.func.isRequired,\n    logToolbarAction: PropTypes.func.isRequired,\n  }),\n};\n\n/**\n * Describes the prop types a Rich Text toolbar plugin can expect.\n * @type {object}\n */\nexport const TOOLBAR_PLUGIN_PROP_TYPES = {\n  ...EDITOR_PLUGIN_PROP_TYPES,\n  editor: PropTypes.object.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  isButton: PropTypes.bool,\n  // TODO: Should get rid of this as it's just necessary as a hack to prevent\n  //  crashes before the user manually set the focus to the Slate input.\n  canAutoFocus: PropTypes.bool,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { Icon } from '@contentful/forma-36-react-components';\nimport { EditorToolbarButton } from '@contentful/forma-36-react-components';\n\nexport default class ToolbarIcon extends Component {\n  static propTypes = {\n    isActive: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string,\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.props.onToggle(event);\n  };\n\n  render() {\n    const { icon, isActive, disabled, title, type } = this.props;\n\n    return (\n      <EditorToolbarButton\n        icon={icon}\n        tooltip={title}\n        label={title}\n        isActive={isActive}\n        disabled={disabled}\n        data-test-id={`toolbar-toggle-${type}`}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport const MarkPropTypes = {\n  attributes: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  mark: PropTypes.string.isRequired\n};\n\nexport const NodePropTypes = {\n  attributes: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  node: PropTypes.shape({\n    type: PropTypes.string.isRequired\n  }).isRequired\n};\n","export const haveMarks = ({ value }, type) => {\n  return value.activeMarks.some(mark => mark.type === type);\n};\n\nexport const haveBlocks = ({ value }, type) => {\n  return value.blocks.some(node => node.type === type);\n};\n\nexport const haveInlines = ({ value }, type) => {\n  return value.inlines.some(inline => inline.type === type);\n};\n\nexport function haveAnyInlines({ value }) {\n  return value.inlines.size > 0;\n}\n\n/**\n * Checks if all inline nodes in the selectin have a certain type.\n * Returns false if there are no inline nodes in the selection.\n *\n * @param {slate.Editor} editor\n * @param {string} type\n * @returns {boolean}\n */\nexport function haveEveryInlineOfType({ value }, type) {\n  if (value.inlines.size > 0) {\n    return value.inlines.every(inline => inline.type === type);\n  }\n\n  return false;\n}\n\nexport const haveTextInSomeBlocks = ({ value }) => {\n  if (value.blocks.size > 0) {\n    return value.blocks.some(block => block.text);\n  }\n};\n","import isHotkey from 'is-hotkey';\nimport markDecorator from './MarkDecorator';\nimport { haveMarks } from './UtilHave';\nimport { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst styles = {\n  // TODO: Ensure a bold mark on a headline makes the heading appear even\n  //  bolder. Consider to make headings non-bold by default.\n  bold: css({\n    color: 'inherit',\n    fontWeight: tokens.fontWeightDemiBold,\n  }),\n  italic: css({\n    fontStyle: 'italic',\n    lineHeight: 1, // Prevents vertical jitter effect when applying code mark.\n  }),\n  code: css({\n    fontFamily: tokens.fontStackMonospace,\n    fontSize: '.9em', // Can't use `rem` to account for code inside a heading.\n  }),\n};\n\nexport default function ({ type, tagName, hotkey, richTextAPI }) {\n  return {\n    renderMark: (props, _editor, next) => {\n      if (props.mark.type === type) {\n        return markDecorator(tagName, { className: styles[type] })(props);\n      }\n      return next();\n    },\n    onKeyDown(event, editor, next) {\n      if (isHotkey(hotkey, event)) {\n        editor.toggleMark(type);\n\n        const action = haveMarks(editor, type) ? 'mark' : 'unmark';\n        richTextAPI.logShortcutAction(action, { markType: type });\n        return;\n      }\n      return next();\n    },\n  };\n}\n","import React from 'react';\nimport { MarkPropTypes } from './PropTypes';\n\nexport default function(Tag, tagProps = {}) {\n  const CommonMark = ({ attributes, children }) => {\n    return (\n      <Tag {...tagProps} {...attributes}>\n        {children}\n      </Tag>\n    );\n  };\n\n  CommonMark.displayName = `${Tag}-mark`;\n  CommonMark.propTypes = MarkPropTypes;\n\n  return CommonMark;\n}\n","/**\n * Handles setting the focus in the Slate editor (if possible due to Slate restrictions)\n * when clicking on a toolbar acton while the editor got no focus.\n *\n * Ideally we would always focus the editor in his case, but this might result\n * in a Slate crash if the editor hasn't been manually focused by the user at\n * that point.\n */\nexport const toolbarActionHandlerWithSafeAutoFocus = (component, customHandler) => (event) => {\n  event.preventDefault();\n\n  const { editor, canAutoFocus } = component.props;\n\n  if (!editor.value.selection.isFocused) {\n    if (canAutoFocus) {\n      editor.focus();\n    } else {\n      // Note: This is only necessary as Slate in 0.4x in our case crashes when\n      //  working on the document before the user manually focuses. Attempts at\n      //  programmatically setting focus and a proper value.selection were in vain.\n      // TODO: Upgrade Slate or figure out how to editor.setFocus when clicking\n      //  a toolbar icon without the editor crashing when starting to type.\n      return;\n    }\n  }\n  return customHandler(event);\n};\n","import * as React from 'react';\nimport { haveMarks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\nexport default ({ type, title, icon }) => (Mark) => {\n  return class CommonToggleMark extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      onToggle(editor.toggleMark(type));\n      const action = haveMarks(editor, type) ? 'mark' : 'unmark';\n      logToolbarAction(action, { markType: type });\n    });\n\n    render() {\n      const { editor, disabled } = this.props;\n      return (\n        <Mark\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleToggle}\n          isActive={haveMarks(editor, type)}\n          disabled={disabled}\n        />\n      );\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const BoldPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.BOLD,\n    tagName: 'b',\n    hotkey: ['mod+b'],\n    richTextAPI\n  });\n};\n\nclass Bold extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.BOLD,\n  title: 'Bold',\n  icon: 'FormatBold'\n})(Bold);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const ItalicPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.ITALIC,\n    tagName: 'em',\n    hotkey: ['mod+i'],\n    richTextAPI\n  });\n};\n\nclass Italic extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.ITALIC,\n  title: 'Italic',\n  icon: 'FormatItalic'\n})(Italic);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const UnderlinedPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.UNDERLINE,\n    tagName: 'u',\n    hotkey: ['mod+u'],\n    richTextAPI\n  });\n};\n\nclass Underlined extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.UNDERLINE,\n  title: 'Underline',\n  icon: 'FormatUnderlined'\n})(Underlined);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const CodePlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.CODE,\n    tagName: 'code',\n    hotkey: ['mod+/'],\n    richTextAPI\n  });\n};\n\nclass Code extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.CODE,\n  title: 'Code',\n  icon: 'Code'\n})(Code);\n","import * as React from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { haveBlocks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\n/**\n * Toggles formatting between a given node type and a plain paragraph.\n *\n * @param {slate.Editor} editor\n * @param {stirng} type\n * @returns {boolean} New toggle state after the change.\n */\nexport const toggleChange = (editor, type) => {\n  const isActive = haveBlocks(editor, type);\n  editor.setBlocks(isActive ? BLOCKS.PARAGRAPH : type);\n  return !isActive;\n};\n\nconst isBlockActive = (editor, type) => haveBlocks(editor, type);\n\nexport default ({ type, title, icon, applyChange = toggleChange, isActive = isBlockActive }) => (\n  Block\n) => {\n  return class BlockToggleDecorator extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      const isActive = applyChange(editor, type);\n      onToggle(editor);\n      const actionName = isActive ? 'insert' : 'remove';\n      logToolbarAction(actionName, { nodeType: type });\n    });\n\n    render() {\n      const { editor, disabled, richTextAPI } = this.props;\n\n      return (\n        <Block\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleToggle}\n          isActive={isActive(editor, type)}\n          disabled={disabled}\n          richTextAPI={richTextAPI}\n        />\n      );\n    }\n  };\n};\n","import { BLOCKS } from '@contentful/rich-text-types';\n\nconst getParent = editor => {\n  const range = editor.value.selection;\n\n  if (!range.start.key) {\n    return null;\n  }\n\n  const startBlock = editor.value.document.getClosestBlock(range.start.key);\n\n  return editor.value.document.getParent(startBlock.key);\n};\n\nexport const isSelectionInQuote = editor => {\n  const ancestor = getParent(editor);\n\n  if (!ancestor) {\n    return false;\n  }\n\n  return ancestor.type === BLOCKS.QUOTE;\n};\n\n/**\n * Toggles formatting between block quote and a plain paragraph.\n *\n * @param {slate.Editor} editor\n * @returns {boolean} New toggle state after the change.\n */\nexport const applyChange = editor => {\n  const isActive = isSelectionInQuote(editor);\n  if (isActive) {\n    editor.unwrapBlock(BLOCKS.QUOTE);\n  } else {\n    editor.setBlocks(BLOCKS.PARAGRAPH).wrapBlock(BLOCKS.QUOTE);\n  }\n  return !isActive;\n};\n","import * as React from 'react';\nimport { NodePropTypes } from './PropTypes';\nimport { css } from 'emotion';\nimport camelCase from 'lodash/camelCase';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst headingCss = {\n  fontWeight: tokens.fontWeightMedium,\n  lineHeight: '1.3',\n  margin: `0 0 ${tokens.spacingS}`\n};\n\nconst styles = {\n  paragraph: css({\n    lineHeight: tokens.lineHeightDefault,\n    marginBottom: '1.5em'\n  }),\n  bold: css({\n    color: 'inherit',\n    fontWeight: tokens.fontWeightDemiBold\n  }),\n  blockquote: css({\n    margin: '0 0 1.3125rem',\n    borderLeft: `6px solid ${tokens.colorElementLight}`,\n    paddingLeft: '0.875rem',\n    fontStyle: 'normal',\n    '& a': {\n      color: 'inherit'\n    }\n  }),\n  code: css({\n    background: tokens.colorElementLight,\n    padding: '0px',\n    color: tokens.colorTextMid,\n    borderRadius: '2px'\n  }),\n  textLink: css({\n    fontSize: 'inherit'\n  }),\n  orderedList: css({\n    margin: '0 0 1.25rem 1.25rem',\n    listStyleType: 'decimal',\n    '[data-test-id=\"ordered-list\"]': {\n      listStyleType: 'upper-alpha',\n      '[data-test-id=\"ordered-list\"]': {\n        listStyleType: 'lower-roman',\n        '[data-test-id=\"ordered-list\"]': {\n          listStyleType: 'lower-alpha'\n        }\n      }\n    },\n    '[data-test-id=\"paragraph\"]': {\n      margin: 0,\n      lineHeight: tokens.lineHeightDefault\n    }\n  }),\n  unorderedList: css({\n    margin: '0 0 1.25rem 1.25rem',\n    listStyleType: 'disc',\n    '[data-test-id=\"unordered-list\"]': {\n      listStyleType: 'circle',\n      '[data-test-id=\"unordered-list\"]': {\n        listStyleType: 'square'\n      }\n    },\n    '[data-test-id=\"paragraph\"]': {\n      margin: 0,\n      lineHeight: tokens.lineHeightDefault\n    }\n  }),\n  listItem: css({\n    listStyle: 'inherit',\n    margin: 0,\n    '[data-test-id=\"ordered-list\"], [data-test-id=\"unordered-list\"]': {\n      margin: `0 0 0 ${tokens.spacingL}`\n    }\n  }),\n  heading1: css({\n    ...headingCss,\n    fontSize: '1.875rem'\n  }),\n  heading2: css({\n    ...headingCss,\n    fontSize: '1.5625rem'\n  }),\n  heading3: css({\n    ...headingCss,\n    fontSize: '1.375rem'\n  }),\n  heading4: css({\n    ...headingCss,\n    fontSize: '1.25rem'\n  }),\n  heading5: css({\n    ...headingCss,\n    fontSize: '1.125rem'\n  }),\n  heading6: css({\n    ...headingCss,\n    fontSize: '1rem'\n  })\n};\n\nexport default function(Tag, tagProps = {}) {\n  const CommonNode = ({ attributes, children, node }) => {\n    return (\n      <Tag\n        className={styles[camelCase(node.type)]}\n        data-test-id={node.type}\n        {...tagProps}\n        {...attributes}>\n        {children}\n      </Tag>\n    );\n  };\n\n  CommonNode.displayName = `${Tag}-node`;\n  CommonNode.propTypes = NodePropTypes;\n\n  return CommonNode;\n}\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { applyChange, isSelectionInQuote } from './Util';\nimport commonNode from '../shared/NodeDecorator';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\n\nconst newPlugin = (defaultType, tagName, hotkey) => ({\n  type = defaultType,\n  richTextAPI: { logShortcutAction }\n}) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === type) {\n        return commonNode(tagName)(props);\n      }\n      return next();\n    },\n    onKeyDown: (e, editor, next) => {\n      if (isHotkey(hotkey, e)) {\n        const isActive = applyChange(editor);\n        const actionName = isActive ? 'insert' : 'remove';\n        logShortcutAction(actionName, { nodeType: type });\n        return;\n      }\n      if (isHotkey('Backspace', e) && isSelectionInQuote(editor) && !haveTextInSomeBlocks(editor)) {\n        editor.unwrapBlock(BLOCKS.QUOTE).delete();\n        return;\n      }\n      return next();\n    }\n  };\n};\n\nconst QuotePlugin = newPlugin(BLOCKS.QUOTE, 'blockquote', ['mod+shift+1']);\n\nexport default QuotePlugin;\n","import React, { Component } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport blockToggleDecorator from '../shared/BlockToggleDecorator';\nimport { applyChange, isSelectionInQuote } from './Util';\n\nclass Blockquote extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\n// TODO: Currently it seems this is the only place using `blockToggleDecorator` but we still\n//  have to inject a custom `applyChange`. Seems like we could get rid of blockToggleDecorator.\nexport default blockToggleDecorator({\n  type: BLOCKS.QUOTE,\n  title: 'Blockquote',\n  icon: 'Quote',\n  applyChange,\n  isActive: isSelectionInQuote\n})(Blockquote);\n\nexport { default as QuotePlugin } from './QuotePlugin';\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { EntryCard } from '@contentful/forma-36-react-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedEntryCard,\n} from '@contentful/field-editor-reference';\n\nexport function FetchingWrappedEntryCard(props) {\n  const { loadEntry, entries } = useEntities();\n\n  React.useEffect(() => {\n    loadEntry(props.entryId);\n  }, [props.entryId]);\n\n  const entry = entries[props.entryId];\n\n  React.useEffect(() => {\n    if (entry) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [entry]);\n\n  if (entry === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Entry\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  if (entry === undefined) {\n    return <EntryCard size=\"default\" loading />;\n  }\n\n  const contentType = props.sdk.space\n    .getCachedContentTypes()\n    .find((contentType) => contentType.sys.id === entry.sys.contentType.sys.id);\n\n  return (\n    <WrappedEntryCard\n      getAsset={props.sdk.space.getAsset}\n      getEntityScheduledActions={props.sdk.space.getEntityScheduledActions}\n      entryUrl={props.getEntryUrl && props.getEntryUrl(entry.sys.id)}\n      size=\"default\"\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      contentType={contentType}\n      entry={entry}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n      isClickable={false}\n    />\n  );\n}\n\nFetchingWrappedEntryCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  entryId: PropTypes.string.isRequired,\n  locale: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func,\n  onEdit: PropTypes.func,\n  getEntryUrl: PropTypes.func,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { AssetCard } from '@contentful/forma-36-react-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedAssetCard,\n} from '@contentful/field-editor-reference';\n\nexport function FetchingWrappedAssetCard(props) {\n  const { loadAsset, assets } = useEntities();\n\n  React.useEffect(() => {\n    loadAsset(props.assetId);\n  }, [props.assetId]);\n\n  const asset = assets[props.assetId];\n\n  React.useEffect(() => {\n    if (asset) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [asset]);\n\n  if (asset === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Asset\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  if (asset === undefined) {\n    return <AssetCard size=\"default\" isLoading title=\"\" src=\"\" href=\"\" />;\n  }\n\n  return (\n    <WrappedAssetCard\n      getAsset={props.sdk.space.getAsset}\n      getEntityScheduledActions={props.sdk.space.getEntityScheduledActions}\n      getAssetUrl={props.getAssetUrl}\n      size=\"default\"\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      asset={asset}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n      isClickable={false}\n    />\n  );\n}\n\nFetchingWrappedAssetCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  locale: PropTypes.string.isRequired,\n  assetId: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func,\n  onEdit: PropTypes.func,\n  getAssetUrl: PropTypes.func,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport tokens from '@contentful/forma-36-tokens';\nimport {\n  Modal,\n  TextField,\n  Button,\n  Form,\n  FormLabel,\n  TextLink,\n  SelectField,\n  Option,\n} from '@contentful/forma-36-react-components';\nimport { EntityProvider } from '@contentful/field-editor-reference';\nimport { FetchingWrappedEntryCard } from '../../plugins/EmbeddedEntityBlock/FetchingWrappedEntryCard';\nimport { FetchingWrappedAssetCard } from '../../plugins/EmbeddedEntityBlock/FetchingWrappedAssetCard';\n\nexport const LINK_TYPES = {\n  URI: 'uri',\n  ENTRY: 'Entry',\n  ASSET: 'Asset',\n};\n\nfunction isFeaturingEntitySelector(entitySelectorConfigs = {}) {\n  return !!entitySelectorConfigs.Entry || !!entitySelectorConfigs.Asset;\n}\n\nfunction entityToLink(entity) {\n  const { id, type } = entity.sys;\n  return { sys: { id, type: 'Link', linkType: type } };\n}\n\nexport class HyperlinkDialog extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    labels: PropTypes.shape({\n      title: PropTypes.string,\n      confirm: PropTypes.string,\n    }),\n    value: PropTypes.shape({\n      text: PropTypes.string,\n      uri: PropTypes.string,\n      target: PropTypes.object,\n      // Will be overwritten accordingly if `uri` or `target.sys.linkType` are set.\n      type: PropTypes.oneOf(['uri', 'Entry', 'Asset']),\n    }),\n    entitySelectorConfigs: PropTypes.object,\n    allowedHyperlinkTypes: PropTypes.arrayOf(\n      PropTypes.oneOf([LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI])\n    ),\n    hideText: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    labels: {\n      title: 'Insert link',\n      confirm: 'Insert link',\n    },\n    value: {},\n    hideText: false,\n    entitySelectorConfigs: {},\n    allowedHyperlinkTypes: [LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI],\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { text, type, uri, target } = props.value;\n    const isEntityLink = Boolean(target);\n    const entityLinks = {\n      [LINK_TYPES.ENTRY]: null,\n      [LINK_TYPES.ASSET]: null,\n    };\n    let linkType = type;\n\n    if (isEntityLink) {\n      linkType = target.sys.linkType;\n      entityLinks[linkType] = target;\n    } else if (props.allowedHyperlinkTypes.includes(LINK_TYPES.URI)) {\n      linkType = LINK_TYPES.URI;\n    } else {\n      linkType = props.allowedHyperlinkTypes[0];\n    }\n\n    this.state = { text, uri, entityLinks, type: linkType };\n  }\n\n  setTargetEntity(type, entity) {\n    this.setState((state) => ({\n      entityLinks: {\n        ...state.entityLinks,\n        [type]: entity ? entityToLink(entity) : undefined,\n      },\n    }));\n  }\n\n  getValue() {\n    const { text, type, uri } = this.state;\n    const value = { type };\n    if (text) {\n      value.text = text;\n    }\n    if (type === LINK_TYPES.URI) {\n      value.uri = uri;\n    } else {\n      value.target = this.state.entityLinks[type];\n    }\n    return value;\n  }\n\n  isLinkComplete() {\n    const { text, type, uri, target } = this.getValue();\n    const requiresText = !this.props.hideText;\n    if (requiresText && !text) {\n      return false;\n    }\n    return (type === LINK_TYPES.URI && uri) || target;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onClose(this.getValue());\n  };\n\n  selectEntry = async () => {\n    const { locale, contentTypes } = this.props.entitySelectorConfigs.Entry;\n    const entry = await this.props.sdk.dialogs.selectSingleEntry({ locale, contentTypes });\n    this.setTargetEntity(LINK_TYPES.ENTRY, entry);\n  };\n\n  selectAsset = async () => {\n    const { locale } = this.props.entitySelectorConfigs.Asset;\n    const asset = await this.props.sdk.dialogs.selectSingleAsset({ locale });\n    this.setTargetEntity(LINK_TYPES.ASSET, asset);\n  };\n\n  render() {\n    const { labels } = this.props;\n    return (\n      <EntityProvider sdk={this.props.sdk}>\n        <React.Fragment>\n          <Modal.Content>{this.renderFields()}</Modal.Content>\n          <Modal.Controls>\n            <Button\n              type=\"submit\"\n              buttonType=\"positive\"\n              onClick={this.handleSubmit}\n              disabled={!this.isLinkComplete()}\n              testId=\"confirm-cta\">\n              {labels.confirm}\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={() => this.props.onClose(null)}\n              buttonType=\"muted\"\n              testId=\"cancel-cta\">\n              Cancel\n            </Button>\n          </Modal.Controls>\n        </React.Fragment>\n      </EntityProvider>\n    );\n  }\n\n  renderFields() {\n    const { hideText, allowedHyperlinkTypes, entitySelectorConfigs } = this.props;\n    const { uri, text, type } = this.state;\n    const isUriInputAutoFocused = type === LINK_TYPES.URI && (hideText || !!text);\n\n    return (\n      <Form>\n        {hideText ? null : (\n          <TextField\n            required\n            labelText=\"Link text\"\n            value={text || ''}\n            onChange={(e) => this.setState({ text: e.target.value })}\n            id=\"link-text\"\n            name=\"link-text\"\n            textInputProps={{\n              testId: 'link-text-input',\n              autoFocus: !isUriInputAutoFocused,\n            }}\n          />\n        )}\n        {isFeaturingEntitySelector(entitySelectorConfigs) && (\n          <SelectField\n            labelText=\"Link type\"\n            value={type}\n            onChange={(e) => this.setState({ type: e.target.value })}\n            name=\"link-type\"\n            id=\"link-type\"\n            selectProps={{ testId: 'link-type-select' }}>\n            {/* Show the option if the link type is allowed or the current link is of type that is no longer valid */}\n            {allowedHyperlinkTypes.includes(LINK_TYPES.URI) || type === LINK_TYPES.URI ? (\n              <Option value={LINK_TYPES.URI}>URL</Option>\n            ) : null}\n            {allowedHyperlinkTypes.includes(LINK_TYPES.ENTRY) || type === LINK_TYPES.ENTRY ? (\n              <Option value={LINK_TYPES.ENTRY}>Entry</Option>\n            ) : null}\n            {allowedHyperlinkTypes.includes(LINK_TYPES.ASSET) || type === LINK_TYPES.ASSET ? (\n              <Option value={LINK_TYPES.ASSET}>Asset</Option>\n            ) : null}\n          </SelectField>\n        )}\n        {type === LINK_TYPES.URI ? (\n          <TextField\n            required\n            labelText=\"Link target\"\n            value={uri || ''}\n            textInputProps={{\n              placeholder: 'https://',\n              testId: 'link-uri-input',\n              autoFocus: isUriInputAutoFocused,\n            }}\n            helpText=\"A protocol may be required, e.g. https://\"\n            onChange={(e) => this.setState({ uri: e.target.value })}\n            id=\"link-uri\"\n            name=\"link-uri\"\n          />\n        ) : (\n          this.renderEntityField()\n        )}\n      </Form>\n    );\n  }\n\n  renderEntityField() {\n    const { type, entityLinks } = this.state;\n    const resetEntity = () => this.setTargetEntity(type, null);\n    const entityLink = entityLinks[type];\n    const isEntitySelectorVisible = !entityLink;\n    return (\n      <div>\n        <FormLabel required htmlFor=\"\">\n          Link target\n        </FormLabel>\n        {!isEntitySelectorVisible && (\n          <TextLink className={css({ marginLeft: tokens.spacingS })} onClick={resetEntity}>\n            Remove selection\n          </TextLink>\n        )}\n        {entityLink && (\n          <div>\n            {type === LINK_TYPES.ENTRY && (\n              <FetchingWrappedEntryCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Entry.locale}\n                entryId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n            {type == LINK_TYPES.ASSET && (\n              <FetchingWrappedAssetCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Asset.locale}\n                assetId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n          </div>\n        )}\n        {/* Keep all entity selectors in the DOM for super fast types switching ux.*/}\n        {isEntitySelectorVisible && this.renderEntitySelector(type, isEntitySelectorVisible)}\n      </div>\n    );\n  }\n\n  renderEntitySelector(type) {\n    return (\n      <div className={css({ marginTop: tokens.spacingS })}>\n        {type === LINK_TYPES.ENTRY && <TextLink onClick={this.selectEntry}>Select entry</TextLink>}\n        {type === LINK_TYPES.ASSET && <TextLink onClick={this.selectAsset}>Select asset</TextLink>}\n      </div>\n    );\n  }\n}\n\nexport const openHyperlinkDialog = (\n  dialogs,\n  { value, showTextInput, allowedHyperlinkTypes, entitySelectorConfigs }\n) => {\n  const isNew = !(value.uri || value.target);\n  const props = {\n    labels: {\n      title: isNew ? 'Insert hyperlink' : 'Edit hyperlink',\n      confirm: isNew ? 'Insert' : 'Update',\n    },\n    value,\n    hideText: !showTextInput,\n    allowedHyperlinkTypes,\n    entitySelectorConfigs,\n  };\n\n  return dialogs.openCurrent({\n    title: props.labels.title,\n    width: 'large',\n    shouldCloseOnEscapePress: true,\n    shouldCloseOnOverlayClick: true,\n    allowHeightOverflow: true,\n    parameters: {\n      type: 'rich-text-hyperlink-dialog',\n      ...props,\n    },\n  });\n};\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport flow from 'lodash/flow';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\n\n/**\n * Given a field object and a rich text node type, return a list of valid\n * content type IDs associated with the node type, based on that node type's\n * `linkContentType` validation.\n *\n * If there is no such validation or the validation is empty, return an empty\n * array.\n *\n * The navigation here is explained by the `nodes` validation having signature:\n * { nodes: { [nodeType]: validationObject[] } }\n *\n * We defensively navigate through this object because\n * 1) the field may not have a `validations` array,\n * 2) the `validations` array may be empty,\n * 3) the `validations` array may not have a `nodes` validation,\n * 4) the `nodes` validation may not validate the `nodeType`, and\n * 5) the `nodeType` validations may not have a `linkContentType` validation.\n *\n * Note that passing an empty array will result in all possible content types\n * being whitelisted.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {string[]}\n */\nexport default (field, nodeType) =>\n  flow(\n    v => find(v, 'nodes'),\n    v => get(v, ['nodes', nodeType]),\n    v => find(v, 'linkContentType'),\n    v => get(v, 'linkContentType', [])\n  )(field.validations);\n","import getLinkedContentTypeIdsForNodeType from './getLinkedContentTypeIdsForNodeType';\n\n/**\n * Returns a config for the entity selector based on a given rich text field and a\n * rich text node type that the entity should be picked for. Takes the field\n * validations for the given node type into account.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {object}\n */\nexport default function newEntitySelectorConfigFromRichTextField(field, nodeType) {\n  return {\n    entityType: getEntityTypeFromRichTextNode(nodeType),\n    locale: field.locale || null, // Will fall back to default locale.\n    contentTypes: getLinkedContentTypeIdsForNodeType(field, nodeType)\n  };\n}\n\nfunction getEntityTypeFromRichTextNode(nodeType) {\n  const words = nodeType.split('-');\n  if (words.indexOf('entry') !== -1) {\n    return 'Entry';\n  }\n  if (words.indexOf('asset') !== -1) {\n    return 'Asset';\n  }\n  throw new Error(`RichText node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport find from 'lodash/find';\nimport flow from 'lodash/flow';\nimport get from 'lodash/get';\nimport { BLOCKS, INLINES, TOP_LEVEL_BLOCKS } from '@contentful/rich-text-types';\n\n// TODO: Move this into separate package (maybe rich-text-types) and share with FE.\nexport const VALIDATIONS = {\n  ENABLED_MARKS: 'enabledMarks',\n  ENABLED_NODE_TYPES: 'enabledNodeTypes'\n};\n\nexport const VALIDATABLE_NODE_TYPES = [\n  ...TOP_LEVEL_BLOCKS.filter(type => type !== BLOCKS.PARAGRAPH),\n  ...Object.values(INLINES)\n];\n\nconst getRichTextValidation = (field, validationType) =>\n  flow(\n    v => find(v, validationType),\n    v => get(v, validationType)\n  )(field.validations);\n\nconst isFormattingOptionEnabled = (field, validationType, nodeTypeOrMark) => {\n  const enabledFormattings = getRichTextValidation(field, validationType);\n\n  if (enabledFormattings === undefined) {\n    return true;\n  }\n\n  return enabledFormattings.includes(nodeTypeOrMark);\n};\n\n/**\n * Checks if nodeType is enabled in the Rich Text Editor Field\n *\n * @param {FieldInfo} field\n * @param {string} nodeType\n * @returns {boolean}\n */\nexport const isNodeTypeEnabled = (field, nodeType) =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_NODE_TYPES, nodeType);\n\n/**\n * Checks if mark is enabled in the Rich Text Editor Field\n *\n * @param {FieldInfo} field\n * @param {string} mark\n * @returns {boolean}\n */\nexport const isMarkEnabled = (field, mark) =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_MARKS, mark);\n","import { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport { haveInlines } from '../shared/UtilHave';\nimport { openHyperlinkDialog, LINK_TYPES } from '../../dialogs/HypelinkDialog/HyperlinkDialog';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\nimport { isNodeTypeEnabled } from '../../validations/index';\n\nconst { HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK } = INLINES;\nconst HYPERLINK_TYPES = [HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK];\n\nconst nodeToHyperlinkType = {\n  [INLINES.ENTRY_HYPERLINK]: LINK_TYPES.ENTRY,\n  [INLINES.ASSET_HYPERLINK]: LINK_TYPES.ASSET,\n  [INLINES.HYPERLINK]: LINK_TYPES.URI,\n};\n\nfunction getAllowedHyperlinkTypes(field) {\n  const hyperlinkTypes = [INLINES.ENTRY_HYPERLINK, INLINES.ASSET_HYPERLINK, INLINES.HYPERLINK];\n  if (field.type === 'RichText') {\n    return hyperlinkTypes\n      .filter((nodeType) => isNodeTypeEnabled(field, nodeType))\n      .map((nodeType) => nodeToHyperlinkType[nodeType]);\n  }\n\n  return hyperlinkTypes.map((nodeType) => nodeToHyperlinkType[nodeType]);\n}\n\nfunction getEntitySelectorConfigs(field) {\n  const config = {};\n\n  // TODO: Don't pass specific key if CT validation prohibits its type:\n  if (isNodeTypeEnabled(field, INLINES.ENTRY_HYPERLINK)) {\n    config.Entry = newEntitySelectorConfigFromRichTextField(field, 'entry-hyperlink');\n  }\n  if (isNodeTypeEnabled(field, INLINES.ASSET_HYPERLINK)) {\n    config.Asset = newEntitySelectorConfigFromRichTextField(field, 'asset-hyperlink');\n  }\n\n  return config;\n}\n\n/**\n * Returns whether or not the current value selection would allow for a user\n * edit on a hyperlink.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function mayEditLink(value) {\n  return !value.isExpanded && hasHyperlink(value);\n}\n\n/**\n * Returns whether the given value has any hyperlink node.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function hasHyperlink(value) {\n  return HYPERLINK_TYPES.some((type) => haveInlines({ value }, type));\n}\n\n/**\n * Returns whether the given value has any inline node other than hyperlinks.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function hasOnlyHyperlinkInlines(value) {\n  return value.inlines.every((inline) => HYPERLINK_TYPES.includes(inline.type));\n}\n\n/**\n * Allows the user to insert/remove a link depending on whether the current\n * selection has a link or not. If there is no link, a dialog is shown for\n * the user.\n *\n * @param {slate.Editor} editor Will be mutated with the required operations.\n * @param {Object} sdk\n * @param {function} logAction\n * @returns {Promise<void>}\n */\nexport async function toggleLink(editor, sdk, logAction) {\n  if (hasHyperlink(editor.value)) {\n    removeLinks(editor, logAction);\n  } else {\n    await insertLink(editor, sdk, logAction);\n  }\n}\n\nasync function insertLink(change, sdk, logAction) {\n  change.blur(); // Ensures modal input auto-focus will work.\n\n  logAction('openCreateHyperlinkDialog');\n  const showTextInput = !change.value.isExpanded || change.value.fragment.text.trim() === '';\n\n  const result = await openHyperlinkDialog(sdk.dialogs, {\n    showTextInput,\n    value: { text: change.value.fragment.text || '' },\n    allowedHyperlinkTypes: getAllowedHyperlinkTypes(sdk.field),\n    entitySelectorConfigs: getEntitySelectorConfigs(sdk.field),\n  });\n\n  if (!result) {\n    logAction('cancelCreateHyperlinkDialog');\n    change.focus();\n    return;\n  }\n  const { text, type: linkType, uri, target } = result;\n  if (showTextInput) {\n    if (change.isVoid(change.value.blocks.last())) {\n      change.insertBlock(BLOCKS.PARAGRAPH);\n    }\n    change.insertText(text).moveFocusForward(0 - text.length);\n  }\n  const data = target ? { target } : { uri };\n  change.call(wrapLink, linkType, data);\n  const nodeType = linkTypeToNodeType(linkType);\n  logAction('insert', { nodeType, linkType });\n\n  change.focus();\n}\n\nfunction removeLinks(change, logAction) {\n  HYPERLINK_TYPES.forEach((type) => change.unwrapInline(type));\n  change.focus();\n  logAction('unlinkHyperlinks');\n}\n\n/**\n * Allows the user to edit the first selected link of a given Change by showing\n * a dialog and applying the change.\n *\n * @param {slate.Editor} change Will be mutated with the required operations.\n * @param {Object} sdk\n * @param {function} logAction\n * @returns {Promise<void>}\n */\nexport async function editLink(change, sdk, logAction) {\n  const link = change.value.inlines.get(0);\n  if (!link) {\n    throw new Error('Change object contains no link to be edited.');\n  }\n  change.blur(); // Ensures modal input auto-focus will work.\n  logAction('openEditHyperlinkDialog');\n  const { uri: oldUri, target: oldTarget } = link.data.toJSON();\n  const result = await openHyperlinkDialog(sdk.dialogs, {\n    showTextInput: false,\n    value: oldTarget ? { target: oldTarget } : { uri: oldUri },\n    allowedHyperlinkTypes: getAllowedHyperlinkTypes(sdk.field),\n    entitySelectorConfigs: getEntitySelectorConfigs(sdk.field),\n  });\n  if (!result) {\n    logAction('cancelEditHyperlinkDialog');\n    change.focus();\n    return;\n  }\n\n  const { type: linkType, uri, target } = result;\n  const nodeType = linkTypeToNodeType(linkType);\n  const data = target ? { target } : { uri };\n  change.setInlines({ type: nodeType, data });\n  logAction('edit', { nodeType, linkType });\n  change.focus();\n}\n\nfunction wrapLink(change, linkType, data) {\n  change.wrapInline({\n    type: linkTypeToNodeType(linkType),\n    data,\n  });\n  change.moveToEnd();\n}\n\nfunction linkTypeToNodeType(linkType) {\n  switch (linkType) {\n    case 'Entry':\n      return ENTRY_HYPERLINK;\n    case 'Asset':\n      return ASSET_HYPERLINK;\n  }\n  return HYPERLINK;\n}\n","import React, { Component } from 'react';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport { hasHyperlink, toggleLink, hasOnlyHyperlinkInlines } from './Util';\n\nexport default class HyperlinkToolbarIcon extends Component {\n  static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n  handleClick = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      onToggle,\n      editor,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await toggleLink(editor, sdk, logToolbarAction);\n    onToggle(editor);\n  });\n\n  render() {\n    const { disabled, editor } = this.props;\n    const isDisabled = disabled || !hasOnlyHyperlinkInlines(editor.value);\n    return (\n      <ToolbarIcon\n        disabled={isDisabled}\n        type={INLINES.HYPERLINK}\n        icon=\"Link\"\n        title=\"Hyperlink\"\n        onToggle={this.handleClick}\n        isActive={hasHyperlink(editor.value)}\n      />\n    );\n  }\n}\n","import { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nexport const hyperlinkTooltipStyles = {\n  entityContentType: css({\n    color: tokens.colorTextLightest,\n    marginRight: tokens.spacingXs,\n    '&:after': {\n      content: '\"\"'\n    }\n  }),\n  entityTitle: css({\n    marginRight: tokens.spacingXs\n  }),\n  separator: css({\n    background: tokens.colorTextMid,\n    margin: tokens.spacingXs\n  })\n};\n\nexport default {\n  hyperlinkWrapper: css({\n    display: 'inline',\n    position: 'static',\n    a: {\n      fontSize: 'inherit !important'\n    }\n  }),\n  hyperlink: css({\n    fontSize: 'inherit !important',\n    display: 'inline !important',\n    '&:hover': {\n      fill: tokens.textColorDark\n    },\n    '&:focus': {\n      fill: tokens.textColorDark\n    }\n  }),\n  hyperlinkIEFallback: css({\n    color: '#1683d0',\n    textDecoration: 'underline'\n  }),\n  // TODO: use these styles once we can use the icon\n  hyperlinkIcon: css({\n    position: 'relative',\n    top: '4px',\n    height: '14px',\n    margin: '0 -2px 0 -1px',\n    webkitTransition: 'fill 100ms ease-in-out',\n    transition: 'fill 100ms ease-in-out',\n    '&:hover': {\n      fill: tokens.textColorDark\n    },\n    '&:focus': {\n      fill: tokens.textColorDark\n    }\n  })\n};\n","import { detect as detectBrowser } from 'detect-browser';\n\nconst browser = detectBrowser();\nconst isEdge = !!browser && browser.name === 'ie';\n\n// TODO: Test whether this is still relevant with latest Edge or at least do\n//  so after upgrading Slate.js to see if still relevant at all.\nexport const SUPPORTS_NATIVE_SLATE_HYPERLINKS = !isEdge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hyperlinkTooltipStyles as styles } from './styles';\nimport { Tag } from '@contentful/forma-36-react-components';\nimport { ScheduleTooltipContent } from '@contentful/field-editor-reference';\nimport { entityHelpers } from '@contentful/field-editor-shared';\nimport { truncate } from './truncate';\n\nasync function fetchAllData({ sdk, entityId, entityType, localeCode, defaultLocaleCode }) {\n  let contentType;\n\n  const getEntity = entityType === 'Entry' ? sdk.space.getEntry : sdk.space.getAsset;\n  const entity = await getEntity(entityId);\n  if (entity.sys.contentType) {\n    const contentTypeId = entity.sys.contentType.sys.id;\n    contentType = await sdk.space.getContentType(contentTypeId);\n  }\n\n  const entityTitle =\n    entityType === 'Entry'\n      ? entityHelpers.getEntryTitle({\n          entry: entity,\n          contentType,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled'\n        })\n      : entityHelpers.getAssetTitle({\n          asset: entity,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled'\n        });\n\n  const entityDescription = entityHelpers.getEntityDescription({\n    entity,\n    contentType,\n    localeCode,\n    defaultLocaleCode\n  });\n\n  const jobs = await sdk.space.getEntityScheduledActions(entityType, entityId);\n\n  const entityStatus = entityHelpers.getEntryStatus(entity.sys);\n\n  return {\n    jobs,\n    entity,\n    entityTitle,\n    entityDescription,\n    entityStatus,\n    contentTypeName: contentType ? contentType.name : ''\n  };\n}\n\n// eslint-disable-next-line react/prop-types\nfunction renderEntityInfo({ entityTitle, entityStatus, contentTypeName }) {\n  const title = truncate(entityTitle, 60) || 'Untitled';\n  return (\n    <div>\n      <span className={styles.entityContentType}>{contentTypeName || 'Asset'}</span>\n      <span className={styles.entityTitle}>{title}</span>\n      <EntityStatusTag statusLabel={entityStatus} />\n    </div>\n  );\n}\n\nfunction EntityStatusTag({ className, statusLabel }) {\n  const tagTypeMap = {\n    published: 'positive',\n    draft: 'warning',\n    archived: 'negative',\n    changed: 'primary'\n  };\n  return (\n    <Tag className={className} tagType={tagTypeMap[statusLabel]}>\n      {statusLabel}\n    </Tag>\n  );\n}\n\nEntityStatusTag.propTypes = {\n  className: PropTypes.string,\n  statusLabel: PropTypes.string.isRequired\n};\n\nexport function EntityHyperlinkTooltip(props) {\n  const { sdk } = props.richTextAPI;\n  const { target } = props;\n\n  const [requestStatus, setRequestStatus] = React.useState({ type: 'loading' });\n\n  React.useEffect(() => {\n    fetchAllData({\n      sdk,\n      entityId: target.sys.id,\n      entityType: target.sys.linkType,\n      localeCode: sdk.field.locale,\n      defaultLocaleCode: sdk.locales.default\n    })\n      .then(entityInfo => {\n        setRequestStatus({ type: 'success', data: entityInfo });\n      })\n      .catch(e => {\n        console.log(e);\n        setRequestStatus({ type: 'error', error: e });\n      });\n  }, []); // eslint-disable-line\n\n  if (requestStatus.type === 'loading') {\n    return `Loading ${target.sys.linkType.toLowerCase()}...`;\n  }\n  let tooltip = '';\n  if (requestStatus.type === 'error') {\n    tooltip = `${target.sys.linkType} missing or inaccessible`;\n  } else {\n    const { jobs, ...entityInfo } = requestStatus.data;\n    tooltip = (\n      <>\n        {renderEntityInfo(entityInfo)}\n        {jobs.length > 0 ? (\n          <>\n            <hr className={styles.separator} />\n            <ScheduleTooltipContent job={jobs[0]} jobsCount={jobs.length} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n  return tooltip;\n}\n","export function truncate(str, length) {\n  if (str && str.length > length) {\n    return (\n      str &&\n      str\n        .substr(0, length + 1) // +1 to look ahead and be replaced below.\n        // Get rid of orphan letters but not one letter words (I, a, 2).\n        // Try to not have “.” as last character to avoid awkward “....”.\n        .replace(/(\\s+\\S(?=\\S)|\\s*)\\.?.$/, '…')\n    );\n  } else {\n    return str;\n  }\n}\n","import React from 'react';\nimport { Tooltip, TextLink } from '@contentful/forma-36-react-components';\nimport PropTypes from 'prop-types';\nimport { cx } from 'emotion';\nimport noop from 'lodash/noop';\nimport isHotKey from 'is-hotkey';\nimport styles from './styles';\nimport { SUPPORTS_NATIVE_SLATE_HYPERLINKS } from '../../helpers/browserSupport';\nimport { EntityHyperlinkTooltip } from './EntityHyperlinkTootip';\n\nexport default class Hyperlink extends React.Component {\n  static propTypes = {\n    attributes: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    editor: PropTypes.object,\n    richTextAPI: PropTypes.object.isRequired,\n    onEdit: PropTypes.func\n  };\n\n  static defaultProps = {\n    onEdit: noop\n  };\n\n  onKeyDown(e) {\n    if (isHotKey('enter', e)) {\n      e.preventDefault();\n      e.stopPropagation(); // Ensure Slate doesn't interpret as new paragraph.\n      this.props.onEdit(e);\n    }\n  }\n\n  render() {\n    const { node } = this.props;\n    const uri = node.data.get('uri');\n    const target = node.data.get('target');\n\n    return (\n      <span\n        {...this.props.attributes}\n        onClick={this.props.onEdit}\n        onKeyDown={e => this.onKeyDown(e)}\n        role=\"button\"\n        tabIndex={0}>\n        {target ? this.renderEntityLink(target) : this.renderLink({ tooltip: uri })}\n      </span>\n      // TODO: Add contentEditable={false} to tooltip to fix text cursor bug\n    );\n  }\n\n  renderLink({ tooltip }) {\n    const { children, node } = this.props;\n    const title = node.data.get('title');\n    const uri = node.data.get('uri');\n    const href = isUrl(uri) ? uri : 'javascript:void(0)';\n    return (\n      <Tooltip\n        content={tooltip}\n        className={styles.tooltipContainer}\n        targetWrapperClassName={styles.hyperlinkWrapper}\n        place=\"bottom\"\n        maxWidth=\"auto\">\n        {SUPPORTS_NATIVE_SLATE_HYPERLINKS ? (\n          <TextLink\n            href={href} // Allows user to open uri link in new tab.\n            rel=\"noopener noreferrer\"\n            title={title}\n            className={styles.hyperlink}>\n            {children}\n          </TextLink>\n        ) : (\n          <span className={cx(styles.hyperlink, styles.hyperlinkIEFallback)}>{children}</span>\n        )}\n      </Tooltip>\n    );\n  }\n\n  renderEntityLink(target) {\n    const tooltip = <EntityHyperlinkTooltip richTextAPI={this.props.richTextAPI} target={target} />;\n    return this.renderLink({ tooltip });\n  }\n}\n\nfunction isUrl(string) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(string) || /^mailto:/i.test(string);\n}\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from './ToolbarIcon';\nimport Hyperlink from './Hyperlink';\nimport { editLink, mayEditLink, toggleLink, hasOnlyHyperlinkInlines } from './Util';\n\nconst { HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK } = INLINES;\n\nexport default ToolbarIcon;\n\nexport const HyperlinkPlugin = ({ richTextAPI }) => ({\n  renderNode: (props, _editor, next) => {\n    const { sdk, logViewportAction } = richTextAPI;\n    const { node, editor } = props;\n    if (isHyperlink(node.type)) {\n      return (\n        <Hyperlink\n          {...props}\n          richTextAPI={richTextAPI}\n          onEdit={event => {\n            event.preventDefault(); // Don't follow `href`\n\n            editor.moveToRangeOfNode(node).focus();\n            if (mayEditLink(editor.value)) {\n              editLink(editor, sdk, logViewportAction);\n            }\n          }}\n        />\n      );\n    }\n    return next();\n  },\n  onKeyDown: (event, editor, next) => {\n    const { sdk, logShortcutAction } = richTextAPI;\n    const hotkey = ['mod+k'];\n\n    if (isHotkey(hotkey, event) && hasOnlyHyperlinkInlines(editor.value)) {\n      if (mayEditLink(editor.value)) {\n        editLink(editor, sdk, logShortcutAction);\n      } else {\n        toggleLink(editor, sdk, logShortcutAction);\n      }\n      return;\n    }\n\n    return next();\n  },\n  normalizeNode: (node, editor, next) => {\n    if (isHyperlink(node.type) && node.getInlines().size > 0) {\n      return () => {\n        node\n          .getInlines()\n          .forEach(inlineNode => editor.unwrapInlineByKey(inlineNode.key, node.type));\n      };\n    }\n    next();\n  }\n});\n\nfunction isHyperlink(type) {\n  return [HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK].includes(type);\n}\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const SubscriptPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.SUBSCRIPT,\n    tagName: 'sub',\n    hotkey: ['mod+~'],\n    richTextAPI\n  });\n};\n\nclass Subscript extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.SUBSCRIPT,\n  title: 'Subscript',\n  icon: 'ArrowDown'\n})(Subscript);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const SuperscriptPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.SUPERSCRIPT,\n    tagName: 'sup',\n    hotkey: ['mod+^'],\n    richTextAPI\n  });\n};\n\nclass Superscript extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.SUPERSCRIPT,\n  title: 'Superscript',\n  icon: 'ArrowUp'\n})(Superscript);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownListItem } from '@contentful/forma-36-react-components';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst styles = {\n  root: css({\n    button: {\n      span: {\n        fontWeight: tokens.fontWeightDemiBold,\n      },\n    },\n  }),\n  h1: css({\n    button: {\n      span: {\n        fontSize: '1.625rem',\n      },\n    },\n  }),\n  h2: css({\n    button: {\n      span: {\n        fontSize: '1.4375rem',\n      },\n    },\n  }),\n  h3: css({\n    button: {\n      span: {\n        fontSize: '1.25rem',\n      },\n    },\n  }),\n  h4: css({\n    button: {\n      span: {\n        fontSize: '1.125rem',\n      },\n    },\n  }),\n  h5: css({\n    button: {\n      span: {\n        fontSize: '1rem',\n      },\n    },\n  }),\n  h6: css({\n    button: {\n      span: {\n        fontSize: '0.875rem',\n      },\n    },\n  }),\n};\n\n// Necessary because we can't use kebab-case for style identifiers.\nconst getStyleForType = (type) => type.replace('heading-', 'h');\n\nexport default class ToolbarDropdownListItem extends Component {\n  static propTypes = {\n    isActive: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  handleClick = (event) => {\n    /*\n      We're using the mousedown event rather than onclick because onclick will\n      steal the focus.\n    */\n\n    event.preventDefault();\n    this.props.onToggle(event);\n  };\n\n  render() {\n    const { isActive, title, type, children } = this.props;\n    return (\n      <DropdownListItem\n        label={title}\n        isActive={isActive}\n        data-test-id={`toolbar-toggle-${type}`}\n        className={cx(styles.root, styles[getStyleForType(type)])}\n        onClick={this.handleClick}>\n        {children}\n      </DropdownListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { haveBlocks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\nexport default ({ type, title, icon, applyChange = (editor, type) => editor.setBlocks(type) }) => (\n  Block\n) => {\n  return class BlockSelectDecorator extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleSelect = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      applyChange(editor, type);\n      onToggle(editor);\n      logToolbarAction('insert', { nodeType: type });\n    });\n\n    render() {\n      const { editor, disabled } = this.props;\n\n      return (\n        <Block\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleSelect}\n          isActive={haveBlocks(editor, type)}\n          disabled={disabled}\n        />\n      );\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { Dropdown, DropdownList, Button } from '@contentful/forma-36-react-components';\nimport tokens from '@contentful/forma-36-tokens';\nimport { css } from 'emotion';\n\nconst styles = {\n  root: css({\n    width: '110px',\n\n    [`@media (min-width: ${tokens.contentWidthDefault})`]: {\n      width: '145px',\n    },\n\n    svg: {\n      marginLeft: 'auto',\n    },\n\n    '> span': {\n      padding: '0 2px!important',\n    },\n  }),\n};\n\nexport const blockTitles = {\n  [BLOCKS.HEADING_1]: 'Heading 1',\n  [BLOCKS.HEADING_2]: 'Heading 2',\n  [BLOCKS.HEADING_3]: 'Heading 3',\n  [BLOCKS.HEADING_4]: 'Heading 4',\n  [BLOCKS.HEADING_5]: 'Heading 5',\n  [BLOCKS.HEADING_6]: 'Heading 6',\n  [BLOCKS.PARAGRAPH]: 'Normal Text',\n  [BLOCKS.EMBEDDED_ENTRY]: 'Embedded Entry',\n  [BLOCKS.EMBEDDED_ASSET]: 'Embedded Asset',\n};\n\nclass HeadingDropdown extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    onToggle: PropTypes.func,\n    currentBlockType: PropTypes.string,\n  };\n  getStyleNameForChange = () => {\n    return blockTitles[this.props.currentBlockType] || blockTitles[BLOCKS.PARAGRAPH];\n  };\n\n  render() {\n    const { onToggle, isOpen, onClose, children } = this.props;\n    return (\n      <Dropdown\n        toggleElement={\n          <Button\n            onClick={onToggle}\n            data-test-id=\"toolbar-heading-toggle\"\n            className={styles.root}\n            indicateDropdown\n            buttonType=\"naked\"\n            size=\"small\"\n            disabled={this.props.disabled}>\n            {this.getStyleNameForChange()}\n          </Button>\n        }\n        isOpen={isOpen}\n        onClose={onClose}>\n        <DropdownList className=\"toolbar-heading-dropdown-list\">{children}</DropdownList>\n      </Dropdown>\n    );\n  }\n}\n\nexport default HeadingDropdown;\n","import React, { Component } from 'react';\nimport ToolbarDropdownListItem from '../shared/ToolbarDropdownListItem';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { blockTitles } from './HeadingDropdown';\n\nexport default function newHeadingDropdownItem(nodeType) {\n  const title = blockTitles[nodeType];\n\n  class Heading extends Component {\n    static displayName = title.replace(/\\s/g, '');\n    render() {\n      return (\n        <ToolbarDropdownListItem {...this.props} data-test-id={nodeType}>\n          {title}\n        </ToolbarDropdownListItem>\n      );\n    }\n  }\n\n  return blockSelectDecorator({\n    type: nodeType,\n    title,\n  })(Heading);\n}\n","import React, { Component } from 'react';\nimport ToolbarDropdownListItem from '../shared/ToolbarDropdownListItem';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { blockTitles } from './HeadingDropdown';\n\nclass Paragraph extends Component {\n  render() {\n    return (\n      <ToolbarDropdownListItem {...this.props}>\n        {blockTitles[BLOCKS.PARAGRAPH]}\n      </ToolbarDropdownListItem>\n    );\n  }\n}\n\nexport default blockSelectDecorator({\n  type: BLOCKS.PARAGRAPH,\n  title: blockTitles[BLOCKS.PARAGRAPH],\n  shouldToggle: false\n})(Paragraph);\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { toggleChange } from '../shared/BlockToggleDecorator';\nimport CommonNode from '../shared/NodeDecorator';\nimport newHeadingDropdownItem from './HeadingDropdownItem';\n\nconst newPlugin = (defaultType, tagName, hotkey) => ({ type = defaultType, richTextAPI }) => ({\n  renderNode: (props, _editor, next) => {\n    if (props.node.type === type) {\n      return CommonNode(tagName, {})(props);\n    }\n    return next();\n  },\n  onKeyDown: (e, editor, next) => {\n    if (isHotkey('enter', e)) {\n      const currentBlock = editor.value.blocks.get(0);\n      if (currentBlock.type === type) {\n        const { value } = editor;\n\n        if (value.selection.start.offset === 0) {\n          const initialRange = value.selection;\n          editor.splitBlock().setBlocksAtRange(initialRange, BLOCKS.PARAGRAPH);\n        } else {\n          editor.splitBlock().setBlocks(BLOCKS.PARAGRAPH);\n        }\n\n        return;\n      }\n    } else if (isHotkey(hotkey, e)) {\n      const isActive = toggleChange(editor, type);\n      const actionName = isActive ? 'insert' : 'remove';\n      richTextAPI.logShortcutAction(actionName, { nodeType: type });\n      return;\n    }\n    return next();\n  },\n});\n\n// TODO: move hotkeys to components\nexport const Heading1Plugin = newPlugin(BLOCKS.HEADING_1, 'h1', ['mod+opt+1']);\nexport const Heading2Plugin = newPlugin(BLOCKS.HEADING_2, 'h2', ['mod+opt+2']);\nexport const Heading3Plugin = newPlugin(BLOCKS.HEADING_3, 'h3', ['mod+opt+3']);\nexport const Heading4Plugin = newPlugin(BLOCKS.HEADING_4, 'h4', ['mod+opt+4']);\nexport const Heading5Plugin = newPlugin(BLOCKS.HEADING_5, 'h5', ['mod+opt+5']);\nexport const Heading6Plugin = newPlugin(BLOCKS.HEADING_6, 'h6', ['mod+opt+6']);\n\nexport const Heading1 = newHeadingDropdownItem(BLOCKS.HEADING_1);\nexport const Heading2 = newHeadingDropdownItem(BLOCKS.HEADING_2);\nexport const Heading3 = newHeadingDropdownItem(BLOCKS.HEADING_3);\nexport const Heading4 = newHeadingDropdownItem(BLOCKS.HEADING_4);\nexport const Heading5 = newHeadingDropdownItem(BLOCKS.HEADING_5);\nexport const Heading6 = newHeadingDropdownItem(BLOCKS.HEADING_6);\nexport { default as Paragraph } from './Paragraph';\nexport { default as HeadingDropdown } from './HeadingDropdown';\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\n\n/**\n * Returns whether given value has a block of the given type.\n * @param {slate.Editor} editor\n * @param {string} type\n * @returns {boolean}\n */\nexport const hasBlockOfType = (editor, type) => {\n  const blocks = editor.value.blocks;\n  return blocks.get(0).type === type;\n};\n\n/**\n * Invokes entity selector modal and inserts block embed.\n * @param {string} nodeType\n * @param {import('@contentful/field-editor-reference/dist/types').FieldExtensionSDK} sdk\n * @param {slate.Editor} editor\n * @param {function} logAction\n */\nexport async function selectEntityAndInsert(nodeType, sdk, editor, logAction) {\n  logAction('openCreateEmbedDialog', { nodeType });\n\n  const { field, dialogs } = sdk;\n  const baseConfig = newEntitySelectorConfigFromRichTextField(field, nodeType);\n  const selectEntity =\n    baseConfig.entityType === 'Asset' ? dialogs.selectSingleAsset : dialogs.selectSingleEntry;\n  const config = { ...baseConfig, withCreate: true };\n  try {\n    const entity = await selectEntity(config);\n    if (!entity) {\n      return;\n    }\n    insertBlock(editor, nodeType, entity);\n    logAction('insert', { nodeType });\n  } catch (error) {\n    if (error) {\n      throw error;\n    } else {\n      logAction('cancelCreateEmbedDialog', { nodeType });\n    }\n  }\n}\n\nexport const createNode = (nodeType, entity) => ({\n  type: nodeType,\n  object: 'block',\n  data: {\n    target: {\n      sys: {\n        id: entity.sys.id,\n        type: 'Link',\n        linkType: entity.sys.type\n      }\n    }\n  }\n});\n\nexport function insertBlock(editor, nodeType, entity, focusNextLine = true) {\n  const linkedEntityBlock = createNode(nodeType, entity);\n  if (editor.value.blocks.size === 0 || haveTextInSomeBlocks(editor)) {\n    editor.insertBlock(linkedEntityBlock);\n  } else {\n    editor.setBlocks(linkedEntityBlock);\n  }\n\n  if (focusNextLine) {\n    editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownListItem, Button, Icon } from '@contentful/forma-36-react-components';\n\nimport { selectEntityAndInsert } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\n\nexport default class EntityLinkToolbarIcon extends Component {\n  static propTypes = {\n    ...TOOLBAR_PLUGIN_PROP_TYPES,\n    isButton: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    isButton: false,\n  };\n\n  handleClick = (e) => {\n    this.props.onCloseEmbedMenu();\n    this.handleAction(e);\n  };\n\n  handleAction = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      editor,\n      nodeType,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await selectEntityAndInsert(nodeType, sdk, editor, logToolbarAction);\n    this.props.onToggle(editor);\n  });\n\n  render() {\n    const { nodeType } = this.props;\n    const type = getEntityTypeFromNodeType(nodeType);\n    const baseClass = `rich-text__${nodeType}`;\n    return this.props.isButton ? (\n      <Button\n        disabled={this.props.disabled}\n        className={`${baseClass}-button`}\n        size=\"small\"\n        onClick={this.handleClick}\n        icon={type === 'Asset' ? 'Asset' : 'EmbeddedEntryBlock'}\n        buttonType=\"muted\"\n        testId={`toolbar-toggle-${nodeType}`}>\n        {`Embed ${type.toLowerCase()}`}\n      </Button>\n    ) : (\n      <DropdownListItem\n        isDisabled={this.props.disabled}\n        className={`${baseClass}-list-item`}\n        size=\"small\"\n        onClick={this.handleClick}\n        testId={`toolbar-toggle-${nodeType}`}>\n        <div className=\"cf-flex-grid\">\n          <Icon\n            icon={type === 'Asset' ? 'Asset' : 'EmbeddedEntryBlock'}\n            className=\"rich-text__embedded-entry-list-icon\"\n            color=\"secondary\"\n          />\n          {type}\n        </div>\n      </DropdownListItem>\n    );\n  }\n}\n\n/**\n * Returns the entity type depending on the given node type.\n * @param {string} nodeType\n * @returns {string}\n */\nfunction getEntityTypeFromNodeType(nodeType) {\n  const words = nodeType.toLowerCase().split('-');\n  if (words.includes('entry')) {\n    return 'Entry';\n  }\n  if (words.includes('asset')) {\n    return 'Asset';\n  }\n  throw new Error(`Node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport { FetchingWrappedEntryCard } from './FetchingWrappedEntryCard';\nimport { FetchingWrappedAssetCard } from './FetchingWrappedAssetCard';\n\nconst styles = {\n  root: css({\n    marginBottom: '1.25rem'\n  })\n};\n\nexport default class LinkedEntityBlock extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    attributes: PropTypes.object.isRequired,\n    editor: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    onEntityFetchComplete: PropTypes.func.isRequired\n  };\n\n  getEntitySys() {\n    const data = this.props.node.data;\n    return {\n      id: data.get('target').sys.id,\n      type: data.get('target').sys.linkType\n    };\n  }\n\n  handleEditClick = () => {\n    const { type, id } = this.getEntitySys();\n    const { navigator } = this.props.sdk;\n    const openEntity = type === 'Asset' ? navigator.openAsset : navigator.openEntry;\n    return openEntity(id, { slideIn: true });\n  };\n\n  handleRemoveClick = () => {\n    const { editor, node } = this.props;\n    editor.moveToRangeOfNode(node);\n    editor.removeNodeByKey(node.key);\n    editor.focus(); // Click on \"x\" might have removed focus.\n  };\n\n  render() {\n    const { sdk, editor, isSelected } = this.props;\n    const isDisabled = editor.props.readOnly || editor.props.actionsDisabled;\n    const { id: entityId, type: entityType } = this.getEntitySys();\n    return (\n      <div {...this.props.attributes} className={styles.root}>\n        {entityType === 'Entry' && (\n          <FetchingWrappedEntryCard\n            sdk={sdk}\n            entryId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={this.handleRemoveClick}\n            onEdit={this.handleEditClick}\n            getEntryUrl={() => {\n              const getEntryUrl = sdk.parameters.instance.getEntryUrl;\n              return typeof getEntryUrl === 'function' ? getEntryUrl(entityId) : '';\n            }}\n            onEntityFetchComplete={this.props.onEntityFetchComplete}\n          />\n        )}\n        {entityType === 'Asset' && (\n          <FetchingWrappedAssetCard\n            sdk={sdk}\n            assetId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={this.handleRemoveClick}\n            onEdit={this.handleEditClick}\n            getAssetUrl={() => {\n              const getAssetUrl = sdk.parameters.instance.getAssetUrl;\n              return typeof getAssetUrl === 'function' ? getAssetUrl(entityId) : '';\n            }}\n            onEntityFetchComplete={this.props.onEntityFetchComplete}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\n\nimport ToolbarIcon from './ToolbarIcon';\nimport EntityLinkBlock from './EmbeddedEntityBlock';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { hasBlockOfType, selectEntityAndInsert } from './Util';\n\nexport default ToolbarIcon;\n\nexport const EmbeddedEntityBlockPlugin = ({\n  richTextAPI: { sdk, logShortcutAction, logViewportAction },\n  nodeType,\n  hotkey\n}) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      const { node, attributes, key } = props;\n      if (node.type === nodeType) {\n        return (\n          <EntityLinkBlock\n            sdk={sdk}\n            {...props}\n            {...attributes}\n            onEntityFetchComplete={() => {\n              logViewportAction('linkRendered', { key });\n            }}\n          />\n        );\n      }\n      return next();\n    },\n    onKeyDown(e, editor, next) {\n      if (hotkey && isHotkey(hotkey, e)) {\n        selectEntityAndInsert(nodeType, sdk, editor, logShortcutAction);\n        return;\n      }\n      if (isHotkey('enter', e) && hasBlockOfType(editor, nodeType)) {\n        editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n        return;\n      }\n      return next();\n    }\n  };\n};\n\nexport const EmbeddedEntryBlockPlugin = ({ richTextAPI }) => {\n  return EmbeddedEntityBlockPlugin({\n    richTextAPI,\n    nodeType: BLOCKS.EMBEDDED_ENTRY,\n    hotkey: ['mod+shift+e']\n  });\n};\n\nexport const EmbeddedAssetBlockPlugin = ({ richTextAPI }) => {\n  return EmbeddedEntityBlockPlugin({\n    richTextAPI,\n    nodeType: BLOCKS.EMBEDDED_ASSET,\n    hotkey: ['mod+shift+a']\n  });\n};\n","import { INLINES } from '@contentful/rich-text-types';\nimport { haveAnyInlines, haveEveryInlineOfType, haveInlines } from '../shared/UtilHave';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\n\nconst createInlineNode = id => ({\n  type: INLINES.EMBEDDED_ENTRY,\n  object: 'inline',\n  data: {\n    target: {\n      sys: {\n        id,\n        type: 'Link',\n        linkType: 'Entry'\n      }\n    }\n  }\n});\n\nexport const insertInline = (editor, entryId, focusNextLine = true) => {\n  if (haveInlines(editor, INLINES.EMBEDDED_ENTRY)) {\n    editor.setInlines(createInlineNode(entryId));\n  } else {\n    editor.insertInline(createInlineNode(entryId));\n  }\n\n  focusNextLine ? editor.moveToStartOfNextText().focus() : null;\n};\n\nexport const hasOnlyInlineEntryInSelection = editor => {\n  const inlines = editor.value.inlines;\n  const selection = editor.value.selection;\n  if (inlines.size === 1 && selection.start.key === selection.end.key) {\n    return inlines.get(0).type === INLINES.EMBEDDED_ENTRY;\n  }\n};\n\n/**\n * Invokes entity selector modal and inserts inline embed.\n * @param {import('@contentful/field-editor-reference/dist/types').FieldExtensionSDK} sdk\n * @param {slate.Editor} editor\n * @param {function} logAction\n */\nexport const selectEntryAndInsert = async (sdk, editor, logAction) => {\n  const nodeType = INLINES.EMBEDDED_ENTRY;\n  logAction('openCreateEmbedDialog', { nodeType });\n\n  const { field, dialogs } = sdk;\n  const baseConfig = newEntitySelectorConfigFromRichTextField(field, nodeType);\n  const config = { ...baseConfig, withCreate: true };\n  try {\n    const entry = await dialogs.selectSingleEntry(config);\n    if (!entry) {\n      return;\n    }\n    insertInline(editor, entry.sys.id);\n    logAction('insert', { nodeType });\n  } catch (error) {\n    if (error) {\n      throw error;\n    } else {\n      logAction('cancelCreateEmbedDialog', { nodeType });\n    }\n  }\n};\n\nexport const canInsertInline = editor => {\n  return !haveAnyInlines(editor) || haveEveryInlineOfType(editor, INLINES.EMBEDDED_ENTRY);\n};\n","import React, { Component } from 'react';\nimport { DropdownListItem, Icon, Button } from '@contentful/forma-36-react-components';\nimport { INLINES } from '@contentful/rich-text-types';\n\nimport { selectEntryAndInsert, canInsertInline } from './Utils';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\n\nexport default class EntryLinkToolbarIcon extends Component {\n  static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n  static defaultProps = {\n    isButton: false,\n  };\n\n  handleClick = (e) => {\n    this.props.onCloseEmbedMenu();\n    this.handleAction(e);\n  };\n\n  handleAction = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      editor,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await selectEntryAndInsert(sdk, editor, logToolbarAction);\n    this.props.onToggle(editor);\n  });\n\n  render() {\n    return this.props.isButton ? (\n      <Button\n        disabled={this.props.disabled}\n        className={`${INLINES.EMBEDDED_ENTRY}-button`}\n        size=\"small\"\n        onClick={(event) => this.handleClick(event)}\n        icon=\"EmbeddedEntryInline\"\n        buttonType=\"muted\"\n        testId={`toolbar-toggle-${INLINES.EMBEDDED_ENTRY}`}>\n        Embed inline entry\n      </Button>\n    ) : (\n      <DropdownListItem\n        isDisabled={this.props.disabled || !canInsertInline(this.props.editor)}\n        className=\"rich-text__entry-link-block-button\"\n        size=\"small\"\n        icon=\"Entry\"\n        testId={`toolbar-toggle-${INLINES.EMBEDDED_ENTRY}`}\n        onClick={this.handleClick}>\n        <div className=\"cf-flex-grid\">\n          <Icon\n            icon=\"EmbeddedEntryInline\"\n            color=\"secondary\"\n            className=\"rich-text__embedded-entry-list-icon\"\n          />\n          Inline entry\n        </div>\n      </DropdownListItem>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\nimport {\n  InlineEntryCard,\n  DropdownListItem,\n  DropdownList,\n  Icon\n} from '@contentful/forma-36-react-components';\nimport { entityHelpers } from '@contentful/field-editor-shared';\nimport { useEntities, ScheduledIconWithTooltip } from '@contentful/field-editor-reference';\n\nimport { INLINES } from '@contentful/rich-text-types';\n\nconst { getEntryTitle, getEntryStatus } = entityHelpers;\n\nconst styles = {\n  scheduledIcon: css({\n    verticalAlign: 'text-bottom',\n    marginRight: tokens.spacing2Xs\n  })\n};\n\nexport const FetchingWrappedInlineEntryCard = props => {\n  const { loadEntry, entries } = useEntities();\n\n  React.useEffect(() => {\n    loadEntry(props.entryId);\n  }, [props.entryId]);\n\n  const entry = entries[props.entryId];\n\n  React.useEffect(() => {\n    if (entry) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [entry]);\n\n  if (entry === 'failed') {\n    return (\n      <InlineEntryCard testId={INLINES.EMBEDDED_ENTRY} selected={props.isSelected}>\n        Entry missing or inaccessible\n      </InlineEntryCard>\n    );\n  }\n\n  if (entry === undefined) {\n    return <InlineEntryCard loading />;\n  }\n\n  const allContentTypes = props.sdk.space.getCachedContentTypes();\n\n  const contentType = allContentTypes.find(\n    contentType => contentType.sys.id === entry.sys.contentType.sys.id\n  );\n  const contentTypeName = contentType ? contentType.name : '';\n\n  const status = getEntryStatus(entry.sys);\n\n  if (status === 'deleted') {\n    return (\n      <InlineEntryCard\n        testId={INLINES.EMBEDDED_ENTRY}\n        onRemove={props.onRemove}\n        selected={props.isSelected}>\n        Entry missing or inaccessible\n      </InlineEntryCard>\n    );\n  }\n\n  const title = getEntryTitle({\n    entry: entry,\n    contentType,\n    localeCode: props.sdk.field.locale,\n    defaultLocaleCode: props.sdk.locales.default,\n    defaultTitle: 'Untitled'\n  });\n\n  return (\n    <InlineEntryCard\n      testId={INLINES.EMBEDDED_ENTRY}\n      selected={props.isSelected}\n      title={`${contentTypeName}: ${title}`}\n      status={status}\n      dropdownListElements={\n        !props.isReadOnly ? (\n          <DropdownList>\n            <DropdownListItem onClick={props.onEdit}>Edit</DropdownListItem>\n            <DropdownListItem onClick={props.onRemove} isDisabled={props.isDisabled}>\n              Remove\n            </DropdownListItem>\n          </DropdownList>\n        ) : null\n      }>\n      <ScheduledIconWithTooltip\n        getEntityScheduledActions={props.sdk.space.getEntityScheduledActions}\n        entityType=\"Entry\"\n        entityId={entry.sys.id}>\n        <Icon className={styles.scheduledIcon} icon=\"Clock\" color=\"muted\" testId=\"scheduled-icon\" />\n      </ScheduledIconWithTooltip>\n      {title}\n    </InlineEntryCard>\n  );\n};\n\nFetchingWrappedInlineEntryCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  entryId: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  isReadOnly: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onEntityFetchComplete: PropTypes.func\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport { FetchingWrappedInlineEntryCard } from './FetchingWrappedInlineEntryCard';\n\nconst styles = {\n  root: css({\n    margin: '0px 5px',\n    fontSize: 'inherit',\n    span: {\n      webkitUserSelect: 'none',\n      mozUserSelect: 'none',\n      msUserSelect: 'none',\n      userSelect: 'none'\n    }\n  })\n};\n\nclass EmbeddedEntryInline extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    attributes: PropTypes.object.isRequired,\n    editor: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    onEntityFetchComplete: PropTypes.func.isRequired\n  };\n\n  getEntitySys() {\n    const data = this.props.node.data;\n    return {\n      id: data.get('target').sys.id,\n      type: data.get('target').sys.linkType\n    };\n  }\n\n  handleEditClick = () => {\n    const { id } = this.getEntitySys();\n    return this.props.sdk.navigator.openEntry(id, { slideIn: true });\n  };\n\n  handleRemoveClick = () => {\n    const { editor, node } = this.props;\n    editor.removeNodeByKey(node.key);\n  };\n\n  render() {\n    const { sdk, editor, isSelected } = this.props;\n    const isDisabled = editor.props.readOnly;\n    const isReadOnly = editor.props.actionsDisabled;\n    const { id: entryId } = this.getEntitySys();\n    return (\n      <span {...this.props.attributes} className={styles.root}>\n        <FetchingWrappedInlineEntryCard\n          sdk={sdk}\n          entryId={entryId}\n          isSelected={isSelected}\n          isDisabled={isDisabled}\n          isReadOnly={isReadOnly}\n          onRemove={this.handleRemoveClick}\n          onEdit={this.handleEditClick}\n          onEntityFetchComplete={this.props.onEntityFetchComplete}\n        />\n      </span>\n    );\n  }\n}\n\nexport default EmbeddedEntryInline;\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from './ToolbarIcon';\nimport EmbeddedEntryInline from './EmbeddedEntryInline';\n\nimport { selectEntryAndInsert, hasOnlyInlineEntryInSelection, canInsertInline } from './Utils';\n\nexport default ToolbarIcon;\n\nexport const EmbeddedEntryInlinePlugin = ({\n  richTextAPI: { sdk, logShortcutAction, logViewportAction }\n}) => ({\n  renderNode: (props, _editor, next) => {\n    const { node, attributes, key } = props;\n    if (node.type === INLINES.EMBEDDED_ENTRY) {\n      return (\n        <EmbeddedEntryInline\n          sdk={sdk}\n          {...props}\n          {...attributes}\n          onEntityFetchComplete={() => {\n            logViewportAction('linkRendered', { key });\n          }}\n        />\n      );\n    }\n    return next();\n  },\n  onKeyDown: (event, editor, next) => {\n    const hotkey = ['mod+shift+2'];\n    if (isHotkey(hotkey, event)) {\n      if (canInsertInline(editor)) {\n        selectEntryAndInsert(sdk, editor, logShortcutAction);\n        return;\n      }\n    }\n    if (isHotkey('enter', event)) {\n      if (hasOnlyInlineEntryInSelection(editor)) {\n        event.preventDefault();\n        editor.moveToStartOfNextText();\n        return;\n      }\n    }\n    return next();\n  }\n});\n","import * as React from 'react';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport EditList from './EditListWrapper';\n\nconst applyChange = (editor, type, logAction) => {\n  const {\n    utils,\n    changes: { unwrapList, wrapInList },\n  } = EditList();\n\n  if (utils.isSelectionInList(editor.value)) {\n    if (utils.getCurrentList(editor.value).type !== type) {\n      const currentList = utils.getCurrentList(editor.value);\n      editor.setNodeByKey(currentList.key, type);\n      logAction('insert', { nodeType: type });\n    } else {\n      unwrapList(editor);\n      logAction('remove', { nodeType: type });\n    }\n  } else {\n    wrapInList(editor, type);\n    logAction('insert', { nodeType: type });\n  }\n\n  return editor.focus();\n};\n\nconst isActive = (editor, type) => {\n  const list = EditList().utils.getCurrentList(editor.value);\n\n  if (list) {\n    return list.type === type;\n  }\n  return false;\n};\n\nexport default ({ type, title, icon }) => (Block) => {\n  return class ToolbarDecorator extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      applyChange(editor, type, logToolbarAction);\n      onToggle(editor);\n    });\n\n    render() {\n      const { editor } = this.props;\n      return (\n        <Block\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleToggle}\n          isActive={isActive(editor, type)}\n          disabled={this.props.disabled}\n        />\n      );\n    }\n  };\n};\n","import React from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport commonNode from '../shared/NodeDecorator';\nimport listToggleDecorator from './ToolbarDecorator';\nimport EditListWrapper from './EditListWrapper';\n\nexport const ListPlugin = () => {\n  return {\n    ...EditListWrapper(),\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === BLOCKS.UL_LIST) {\n        return commonNode('ul')(props);\n      } else if (props.node.type === BLOCKS.OL_LIST) {\n        return commonNode('ol')(props);\n      } else if (props.node.type === BLOCKS.LIST_ITEM) {\n        return commonNode('li')(props);\n      }\n      return next();\n    }\n  };\n};\n\nexport const UnorderedList = listToggleDecorator({\n  type: BLOCKS.UL_LIST,\n  title: 'UL',\n  icon: 'ListBulleted'\n})(props => <ToolbarIcon {...props} />);\n\nexport const OrderedList = listToggleDecorator({\n  type: BLOCKS.OL_LIST,\n  title: 'OL',\n  icon: 'ListNumbered'\n})(props => <ToolbarIcon {...props} />);\n","import React, { Component } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst styles = {\n  hr: css`\n    height: ${tokens.spacingM};\n    background: transparent;\n    position: relative;\n    margin: 0 0 ${tokens.spacingL};\n    &:hover {\n      cursor: pointer;\n    }\n    &::after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 1px;\n      background: ${tokens.colorElementMid};\n      top: 50%;\n    }\n  `,\n  hrSelected: css`\n    &::after {\n      background: ${tokens.colorPrimary};\n      -webkit-box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n      box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n    }\n  `\n};\n\nexport const HrPlugin = () => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === BLOCKS.HR) {\n        return (\n          <hr\n            className={cx(styles.hr, props.isSelected && styles.hrSelected)}\n            {...props.attributes}\n          />\n        );\n      }\n      return next();\n    }\n  };\n};\n\nclass Hr extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default blockSelectDecorator({\n  type: BLOCKS.HR,\n  title: 'HR',\n  icon: 'HorizontalRule',\n  applyChange: (editor, type) => {\n    const hr = {\n      type,\n      object: 'block'\n    };\n\n    if (editor.value.blocks.size === 0 || haveTextInSomeBlocks(editor)) {\n      editor.insertBlock(hr);\n    } else {\n      editor.setBlocks(hr);\n    }\n\n    editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n  }\n})(Hr);\n","import * as contentfulSlateJSAdapter from '@contentful/contentful-slatejs-adapter';\nimport { documentToPlainTextString } from '@contentful/rich-text-plain-text-renderer';\nimport schema from '../../constants/Schema';\n\nexport const getCharacterCount = editor => {\n  const document = contentfulSlateJSAdapter.toContentfulDocument({\n    document: editor.value.document.toJSON(),\n    schema\n  });\n  return documentToPlainTextString(document).length;\n};\n","import { getCharacterCount } from './Paste';\n\n/**\n * This plugin tracks the character count before and after a paste event,\n * including the text selected during the event. This creates parity with our\n * tracking for the markdown editor.\n */\nexport const PastePlugin = ({ richTextAPI: { logShortcutAction } }) => ({\n  onPaste(_event, editor, next) {\n    const characterCountSelection = global.getSelection().toString().length;\n    const characterCountBefore = getCharacterCount(editor);\n\n    setTimeout(() => {\n      const characterCountAfter = getCharacterCount(editor);\n      logShortcutAction('paste', {\n        characterCountAfter,\n        characterCountBefore,\n        characterCountSelection\n      });\n    });\n    next();\n    return;\n  }\n});\n","import HtmlSerializer from 'slate-html-serializer';\nimport { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';\n\n/**\n * Tags to block types mapping\n */\nconst BLOCK_TAGS = {\n  p: BLOCKS.PARAGRAPH,\n  ul: BLOCKS.UL_LIST,\n  ol: BLOCKS.OL_LIST,\n  blockquote: BLOCKS.QUOTE,\n  hr: BLOCKS.HR,\n  h1: BLOCKS.HEADING_1,\n  h2: BLOCKS.HEADING_2,\n  h3: BLOCKS.HEADING_3,\n  h4: BLOCKS.HEADING_4,\n  h5: BLOCKS.HEADING_5,\n  h6: BLOCKS.HEADING_6\n};\n\n/**\n * tags to marks types mapping\n */\nconst MARK_TAGS = {\n  strong: MARKS.BOLD,\n  b: MARKS.BOLD,\n  em: MARKS.ITALIC,\n  i: MARKS.ITALIC,\n  u: MARKS.UNDERLINE,\n  sup: MARKS.SUPERSCRIPT,\n  sub: MARKS.SUBSCRIPT,\n  code: MARKS.CODE\n};\n\nconst isGoogleWrapper = el =>\n  el.tagName.toLowerCase() === 'b' && el.id.startsWith('docs-internal-guid-');\n\nconst isGoogleBold = el => {\n  return el.style.fontWeight === '700';\n};\n\nconst isGoogleItalic = el => {\n  return el.style.fontStyle === 'italic';\n};\n\nconst isGoogleUnderline = el => {\n  return el.style.textDecoration === 'underline';\n};\n\nconst gDocsRules = {\n  deserialize(el, next) {\n    const isFromGoogleDocs = !!el.ownerDocument.querySelector('[id*=docs-internal-guid-]');\n\n    if (!isFromGoogleDocs) {\n      return;\n    }\n    if (isGoogleWrapper(el)) {\n      return next(el.childNodes);\n    }\n\n    /**\n     * Google Docs represent marks with css styles applied to SPAN\n     * instead of html tags.\n     * */\n    if (el.tagName.toLowerCase() === 'span') {\n      const marks = [];\n      if (isGoogleBold(el)) {\n        marks.push(MARKS.BOLD);\n      }\n      if (isGoogleItalic(el)) {\n        marks.push(MARKS.ITALIC);\n      }\n      if (isGoogleUnderline(el)) {\n        marks.push(MARKS.UNDERLINE);\n      }\n\n      const textNode = {\n        object: 'text',\n        leaves: [\n          {\n            object: 'leaf',\n            text: el.textContent,\n            marks: marks.map(type => ({ object: 'mark', type }))\n          }\n        ]\n      };\n\n      return textNode;\n    }\n  }\n};\n\nconst listItems = {\n  deserialize(el, next) {\n    /** list-items in Contentful's schema must have blocks as direct children */\n    if (el.tagName.toLowerCase() === 'li') {\n      let childNodes = next(el.childNodes);\n\n      childNodes = childNodes.map(node => {\n        if (node.object === 'text') {\n          return {\n            object: 'block',\n            type: BLOCKS.PARAGRAPH,\n            nodes: [node]\n          };\n        } else {\n          return node;\n        }\n      });\n\n      return {\n        object: 'block',\n        type: BLOCKS.LIST_ITEM,\n        nodes: childNodes\n      };\n    }\n  }\n};\n\nconst links = {\n  deserialize(el, next) {\n    if (el.tagName.toLowerCase() === 'a') {\n      // we only support links with href,\n      // if href is not defined, we should serialize as text\n      if (el.getAttribute('href')) {\n        return {\n          object: 'inline',\n          type: INLINES.HYPERLINK,\n          nodes: next(el.childNodes),\n          data: {\n            uri: el.getAttribute('href')\n          }\n        };\n      } else {\n        return next(el.childNodes);\n      }\n    }\n  }\n};\n\nconst macOSTrailingBreak = {\n  deserialize(el) {\n    if (el.tagName.toLowerCase() === 'br' && el.classList.contains('Apple-interchange-newline')) {\n      return null;\n    }\n  }\n};\n\nconst marks = {\n  deserialize(el, next) {\n    const mark = MARK_TAGS[el.tagName.toLowerCase()];\n    if (mark) {\n      return {\n        object: 'mark',\n        type: mark,\n        nodes: next(el.childNodes)\n      };\n    }\n  }\n};\n\nconst blocks = {\n  deserialize(el, next) {\n    const block = BLOCK_TAGS[el.tagName.toLowerCase()];\n    if (block) {\n      const childNodes = next(el.childNodes);\n\n      return {\n        object: 'block',\n        type: block,\n        nodes: childNodes.length > 0 ? childNodes : [{ object: 'text' }]\n      };\n    }\n  }\n};\n\nconst RULES = [gDocsRules, listItems, links, macOSTrailingBreak, marks, blocks];\n\nexport const create = () => {\n  return new HtmlSerializer({\n    rules: RULES\n  });\n};\n","const RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE = 'richTextCommandsContext';\n\n/**\n * @description\n * Returns Command Palette command text or leading slash\n *\n * @param {Slate.Editor} editor\n * @returns {String}\n */\nexport const getCommandText = editor => {\n  // matches the character / literally (case sensitive)\n  if (!editor.value.startText) {\n    return null;\n  }\n  const COMMAND_REGEX = /\\/(\\S*)$/;\n  const startOffset = editor.value.selection.start.offset;\n  const textBefore = editor.value.startText.text.slice(0, startOffset);\n  const result = COMMAND_REGEX.exec(textBefore);\n  return result === null ? null : result[1] || result[0];\n};\n\n/**\n * @description\n * Returns Command Palette Decoration if applicable to current text.\n *\n * @param {Slate.Editor} editor\n * @returns {Slate.Decoration?}\n */\nexport const getDecorationOrDefault = editor => {\n  const value = editor.value;\n  if (!value.startText) {\n    return null;\n  }\n\n  const inputValue = getCommandText(editor);\n\n  const { selection } = value;\n\n  if (inputValue) {\n    const decoration = {\n      anchor: {\n        key: selection.start.key,\n        offset: selection.start.offset - (inputValue.length + 1)\n      },\n      focus: {\n        key: selection.start.key,\n        offset: selection.start.offset\n      },\n      mark: {\n        type: RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE\n      }\n    };\n    return decoration;\n  }\n  return null;\n};\n\nexport const hasCommandPaletteMarkType = markType => {\n  return markType === RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE;\n};\n\n/**\n * @description\n * Checks if document has command palette decoration\n *\n * @param {Slate.Editor} editor\n * @returns {Boolean}\n */\nexport const hasCommandPaletteDecoration = editor => {\n  const decorations = editor.value.document.getDecorations(editor);\n\n  if (decorations.isEmpty()) {\n    return false;\n  }\n\n  const commandPaletteDecoration = decorations.find(\n    d => d.mark.type === RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE\n  );\n  return Boolean(commandPaletteDecoration);\n};\n\nexport const removeCommand = (editor, command, anchorOffset = 1) => {\n  editor.removeTextByKey(\n    editor.value.selection.start.key,\n    editor.value.selection.start.offset - (command.length + anchorOffset),\n    command.length + anchorOffset\n  );\n};\n","import { isNodeTypeEnabled } from '../../validations';\nimport { INLINES, BLOCKS } from '@contentful/rich-text-types';\nimport { entityHelpers } from '@contentful/field-editor-shared';\n\nconst ACTIONS = {\n  EMBED: 'embed',\n  CREATE_EMBED: 'create_embed'\n};\n\nexport async function fetchAssets(sdk, query = '') {\n  const assets = await sdk.space.getAssets({ query });\n  return assets.items.map(asset => ({\n    contentTypeName: 'Asset',\n    displayTitle: asset.fields.title ? asset.fields.title[sdk.field.locale] : 'Untitled',\n    id: asset.sys.id,\n    entry: asset,\n    thumbnail:\n      asset.fields.file &&\n      asset.fields.file[sdk.field.locale] &&\n      `${asset.fields.file[sdk.field.locale].url}?h=30`\n  }));\n}\n\nexport async function fetchEntries(sdk, contentType, query = '') {\n  const entries = await sdk.space.getEntries({\n    content_type: contentType.sys.id,\n    query\n  });\n\n  return Promise.all(\n    entries.items.map(async entry => {\n      const description = entityHelpers.getEntityDescription({\n        contentType,\n        entity: entry,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default\n      });\n      const displayTitle = entityHelpers.getEntryTitle({\n        entry,\n        contentType,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default,\n        defaultTitle: 'Untitled'\n      });\n      return {\n        contentTypeName: contentType.name,\n        displayTitle: displayTitle,\n        id: entry.sys.contentType.sys.id,\n        description,\n        entry\n      };\n    })\n  );\n}\n\n/**\n * @description\n * Checks the field validations if the current content type is valid to be linked/embedded.\n *\n * @param {Object} field\n * @param {Object} contentType\n * @param {String} embedType\n * @returns {Boolean}\n */\nexport const isValidLinkedContentType = (field, contentType, embedType) => {\n  if (field.validations.length === 0) {\n    return true;\n  }\n\n  const nodes = field.validations.filter(val => val.nodes)[0].nodes;\n\n  if (nodes[embedType] === undefined) {\n    return true;\n  }\n\n  return !!nodes[embedType]\n    .filter(typeVal => typeVal.linkContentType)\n    .reduce((pre, cur) => [...pre, cur.linkContentType], [])\n    .reduce((pre, cur) => [...pre, ...cur], [])\n    .find(ct => ct === contentType.sys.id);\n};\n\nexport const isEmbeddingEnabled = field =>\n  isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ASSET) ||\n  isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ENTRY) ||\n  isNodeTypeEnabled(field, INLINES.EMBEDDED_ENTRY);\n\nexport class CommandPaletteActionBuilder {\n  constructor(sdk) {\n    this.sdk = sdk;\n  }\n\n  // TODO: Let's create dedicated functions for assets so we do not have to pass a CT.\n\n  maybeBuildEmbedAction(embedType, contentType, callback) {\n    if (!isNodeTypeEnabled(this.sdk.field, embedType)) {\n      return false;\n    }\n    const isAsset = !contentType;\n    if (!isAsset && !isValidLinkedContentType(this.sdk.field, contentType, embedType)) {\n      return false;\n    }\n\n    return buildAction(embedType, contentType, ACTIONS.EMBED, callback);\n  }\n\n  async maybeBuildCreateAndEmbedAction(embedType, contentType, callback) {\n    if (!isNodeTypeEnabled(this.sdk.field, embedType)) {\n      return false;\n    }\n\n    const isAsset = !contentType;\n    if (!isAsset) {\n      if (!isValidLinkedContentType(this.sdk.field, contentType, embedType)) {\n        return false;\n      }\n\n      const canCreateEntryOfContentType = await this.sdk.access.can('create', {\n        sys: {\n          type: 'Entry',\n          contentType: {\n            sys: contentType.sys\n          }\n        }\n      });\n\n      if (canCreateEntryOfContentType === false) {\n        return false;\n      }\n    } else {\n      const canCreateAssets = await this.sdk.access.can('create', 'Asset');\n      if (canCreateAssets === false) {\n        return false;\n      }\n    }\n\n    return buildAction(embedType, contentType, ACTIONS.CREATE_EMBED, callback);\n  }\n}\n\nfunction buildAction(embedType, contentType, actionType, callback) {\n  const isAsset = !contentType;\n  const isInline = embedType === INLINES.EMBEDDED_ENTRY;\n  const label = `${actionType === ACTIONS.EMBED ? 'Embed' : 'Create and embed'} ${\n    isAsset ? 'Asset' : contentType.name\n  } ${isInline ? ' - Inline' : ''}`;\n\n  const icon = isInline ? 'EmbeddedEntryInline' : 'EmbeddedEntryBlock';\n\n  return {\n    label,\n    group: isAsset ? 'Assets' : contentType.name,\n    callback,\n    icon\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport isHotKey from 'is-hotkey';\nimport cn from 'classnames';\nimport { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\nimport {\n  SkeletonContainer,\n  SkeletonBodyText,\n  Spinner,\n  SectionHeading,\n  Icon,\n  IconButton\n} from '@contentful/forma-36-react-components';\nimport uniqBy from 'lodash/uniqBy';\n\nconst styles = {\n  commandPanel: css({\n    display: 'block',\n    background: tokens.colorWhite,\n    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1), 0 5px 10px -5px rgba(0, 0, 0, 0.3)',\n    border: `1px solid ${tokens.colorElementDark}`,\n    borderRadius: '3px',\n    fontFamily: tokens.fontStackPrimary,\n    width: '500px',\n    overflowY: 'auto'\n  }),\n  commandPanelList: css({\n    display: 'block',\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    height: '200px',\n    overflowY: 'auto'\n  }),\n  item: css({\n    fontSize: tokens.fontSizeM,\n    lineHeight: tokens.lineHeightDefault,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    borderBottom: `1px solid ${tokens.colorElementMid}`,\n    margin: 0,\n    color: tokens.colorTextDark\n  }),\n  divider: css({\n    fontWeight: tokens.fontWeightDemiBold,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    letterSpacing: tokens.letterSpacingWide,\n    fontSize: tokens.fontSizeS,\n    textTransform: 'uppercase',\n    borderBottom: `1px solid ${tokens.colorElementDark}`,\n    margin: 0,\n    lineHeight: tokens.lineHeightDefault,\n    color: tokens.colorTextDark\n  }),\n  icon: css({\n    marginRight: 10\n  }),\n  isSelected: css({\n    background: tokens.colorElementLight\n  }),\n  skeletonContainer: css({\n    padding: tokens.spacingM,\n    height: 200,\n    margin: 0\n  }),\n  button: css({\n    textAlign: 'left',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    border: 'none',\n    background: 'transparent',\n    fontSize: tokens.fontSizeM\n  }),\n  navBar: css({\n    display: 'flex',\n    bottom: 0,\n    background: tokens.colorElementLightest,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    width: '100%'\n  }),\n  loader: css({\n    marginLeft: 'auto'\n  }),\n  thumbnail: css({\n    marginRight: 15\n  }),\n  instruction: css({\n    marginRight: 15,\n    color: tokens.colorTextLight\n  }),\n  closeButton: css({\n    marginLeft: 'auto'\n  })\n};\n\nconst itemPropType = PropTypes.shape({\n  label: PropTypes.string,\n  callback: PropTypes.func\n});\n\nclass CommandPanelItem extends React.Component {\n  static propTypes = {\n    isSelected: PropTypes.bool,\n    index: PropTypes.number,\n    classNames: PropTypes.string,\n    item: itemPropType\n  };\n  listItemRef = null;\n\n  componentDidUpdate() {\n    if (this.props.isSelected) {\n      this.listItemRef.scrollIntoView({\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  }\n\n  render() {\n    const { index, classNames, item } = this.props;\n\n    return (\n      <li\n        key={index}\n        className={classNames}\n        ref={ref => {\n          this.listItemRef = ref;\n        }}>\n        <button type=\"button\" className={styles.button} onClick={item.callback && item.callback}>\n          {item.icon && <Icon className={styles.icon} icon={item.icon} color=\"secondary\" />}\n          {item.thumbnail && <img className={styles.thumbnail} src={item.thumbnail} alt=\"\" />}\n          {item.label}\n        </button>\n      </li>\n    );\n  }\n}\n\nconst Instruction = ({ children }) => <span className={styles.instruction}>{children}</span>;\nInstruction.propTypes = {\n  children: PropTypes.node\n};\n\nexport class CommandPanel extends React.Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(itemPropType),\n    searchString: PropTypes.string,\n    className: PropTypes.string,\n    testId: PropTypes.string,\n    isLoading: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    breadcrumb: PropTypes.string,\n    richTextAPI: PropTypes.object,\n    onClose: PropTypes.func\n  };\n  static defaultProps = {\n    className: undefined,\n    searchString: '',\n    items: [],\n    testId: 'cf-ui-command-panel',\n    isLoading: true,\n    isUpdating: false\n  };\n\n  state = {\n    selectedKey: 0,\n    items: []\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const itemsHasUpdated = props.items !== state.originalItems;\n    const searchStringHasUpdated = props.searchString !== state.originalSearchString;\n\n    const items = props.items.filter(item =>\n      item.label.toLowerCase().includes(props.searchString ? props.searchString.toLowerCase() : '')\n    );\n\n    return {\n      originalItems: props.items,\n      originalSearchString: props.searchString,\n      items,\n      selectedKey: itemsHasUpdated || searchStringHasUpdated ? 0 : state.selectedKey\n    };\n  }\n\n  componentDidMount() {\n    this.props.richTextAPI.logViewportAction('openRichTextCommandsPalette');\n    document.addEventListener('keydown', this.handleKeyboard, true);\n  }\n\n  componentWillUnmount() {\n    this.props.richTextAPI.logViewportAction('cancelRichTextCommandsPalette');\n    document.removeEventListener('keydown', this.handleKeyboard, true);\n  }\n\n  handleKeyboard = e => {\n    if (isHotKey('up', e)) {\n      if (this.state.selectedKey === 0) return;\n      this.setState(state => ({\n        selectedKey: state.selectedKey - 1\n      }));\n    }\n\n    if (isHotKey('down', e)) {\n      if (this.state.selectedKey === this.state.items.length - 1) return;\n      this.setState(state => ({\n        selectedKey: state.selectedKey + 1\n      }));\n    }\n\n    if (isHotKey('enter', e)) {\n      const selectedItem = this.state.items[this.state.selectedKey];\n      if (selectedItem && selectedItem.callback) selectedItem.callback();\n    }\n  };\n\n  renderGroups() {\n    const groups = uniqBy(\n      this.state.items.map(item => item.group),\n      value => value\n    );\n\n    if (!groups.length) {\n      return <li className={styles.item}>No results</li>;\n    }\n\n    return groups.map((groupName, index) => {\n      return (\n        <React.Fragment key={index}>\n          {groupName && (\n            <li key={groupName} className={styles.divider}>\n              {groupName}\n            </li>\n          )}\n          {this.renderItems(groupName)}\n        </React.Fragment>\n      );\n    });\n  }\n\n  renderItems(groupName) {\n    return this.state.items\n      .filter(item => item.group === groupName)\n      .map(item => {\n        const index = this.state.items.indexOf(item);\n        const isSelected = index === this.state.selectedKey;\n\n        const classNames = cn(styles.item, {\n          [styles.isSelected]: isSelected\n        });\n\n        return (\n          <CommandPanelItem\n            item={item}\n            classNames={classNames}\n            key={index}\n            isSelected={isSelected}\n          />\n        );\n      });\n  }\n\n  renderNavigationBar = () => (\n    <div className={styles.navBar}>\n      <SectionHeading>\n        {this.props.breadcrumb ? `Embed ${this.props.breadcrumb}` : 'Richtext Commands'}\n      </SectionHeading>\n      <IconButton\n        label=\"Close\"\n        className={styles.closeButton}\n        iconProps={{ icon: 'Close' }}\n        buttonType=\"muted\"\n        onClick={this.props.onClose}\n      />\n    </div>\n  );\n\n  renderStatusBar = () => (\n    <div className={styles.navBar}>\n      <span className={styles.instructions}>\n        <Instruction>↑ ↓ to navigate</Instruction>\n        <Instruction>↵ to confirm</Instruction>\n        <Instruction>esc to close</Instruction>\n      </span>\n      {this.props.isUpdating && (\n        <span className={styles.loader}>\n          loading <Spinner size=\"small\" />\n        </span>\n      )}\n    </div>\n  );\n\n  renderSkeleton = () => (\n    <li className={styles.skeletonContainer}>\n      <SkeletonContainer>\n        <SkeletonBodyText numberOfLines={7} />\n      </SkeletonContainer>\n    </li>\n  );\n\n  render() {\n    const { className, testId, isLoading } = this.props;\n\n    const classNames = cn(styles.commandPanel, className);\n\n    return (\n      <div className={classNames}>\n        {this.renderNavigationBar()}\n        <ul className={styles.commandPanelList} data-test-id={testId}>\n          {isLoading ? this.renderSkeleton() : this.renderGroups()}\n        </ul>\n        {this.renderStatusBar()}\n      </div>\n    );\n  }\n}\n\nexport default CommandPanel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport isHotKey from 'is-hotkey';\nimport throttle from 'lodash/throttle';\nimport flatten from 'lodash/flatten';\nimport { insertBlock } from '../../EmbeddedEntityBlock/Util';\nimport { insertInline } from '../../EmbeddedEntryInline/Utils';\nimport { fetchEntries, fetchAssets, CommandPaletteActionBuilder } from '../CommandPaletteService';\nimport { removeCommand } from '../Util';\nimport CommandPanelMenu from './CommandPanelMenu';\nimport { InViewport } from '@contentful/forma-36-react-components';\n\nconst DEFAULT_POSITION = {\n  top: 0,\n  left: 0,\n};\nclass CommandPalette extends React.PureComponent {\n  static propTypes = {\n    editor: PropTypes.object,\n    command: PropTypes.string,\n    richTextAPI: PropTypes.object,\n  };\n\n  state = {\n    anchorPosition: DEFAULT_POSITION,\n    items: [],\n    isLoading: true,\n    panelPosition: 'bottom',\n  };\n\n  paletteDimensions = {\n    height: 300,\n    width: 300,\n  };\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    await this.createInitialCommands();\n    this.updatePanelPosition();\n    this.paletteDimensions = {\n      height: this.palette.getBoundingClientRect().height,\n      width: this.palette.getBoundingClientRect().width,\n    };\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.removeEventListeners();\n    this.requestUpdate.cancel();\n  }\n\n  bindEventListeners = () => {\n    document.addEventListener('scroll', this.handleScroll, true);\n    document.addEventListener('keydown', this.handleKeyboard, true);\n    document.addEventListener('click', this.handleOutsideClick, true);\n  };\n\n  removeEventListeners = () => {\n    document.removeEventListener('scroll', this.handleScroll, true);\n    document.removeEventListener('keydown', this.handleKeyboard, true);\n    document.removeEventListener('click', this.handleOutsideClick, true);\n  };\n\n  handleOutsideClick = (event) => {\n    if (!this.palette.contains(event.target)) {\n      this.setState({\n        isClosed: true,\n      });\n    }\n  };\n\n  requestUpdate = throttle(\n    () => {\n      if (this.state.currentCommand) {\n        this.setState({ isUpdating: true });\n        this.createCommands(\n          this.state.currentCommand.contentType,\n          this.state.currentCommand.type,\n          this.props.command\n        );\n      }\n    },\n    1000,\n    { leading: true, trailing: false }\n  );\n\n  componentDidUpdate() {\n    if (this.state.currentCommand && this.state.currentCommand.command !== this.props.command) {\n      this.requestUpdate();\n    } else {\n      this.requestUpdate.cancel();\n    }\n    if (!this.state.isClosed) {\n      this.bindEventListeners();\n    } else {\n      this.removeEventListeners();\n    }\n  }\n\n  createCommand = (label, contentType, entry, type, description, thumbnail) => ({\n    label: `${label}${description ? ` - ${description}` : ''}`,\n    thumbnail,\n    contentType,\n    callback: () => {\n      const { editor, command, richTextAPI } = this.props;\n      const { logCommandPaletteAction } = richTextAPI;\n      removeCommand(editor, command);\n      switch (type) {\n        case INLINES.EMBEDDED_ENTRY:\n          insertInline(editor, entry.sys.id, false);\n          logCommandPaletteAction('insert', {\n            nodeType: INLINES.EMBEDDED_ENTRY,\n          });\n          break;\n        case BLOCKS.EMBEDDED_ASSET:\n          insertBlock(editor, BLOCKS.EMBEDDED_ASSET, entry, false);\n          logCommandPaletteAction('insert', {\n            nodeType: BLOCKS.EMBEDDED_ASSET,\n          });\n          break;\n        default:\n          insertBlock(editor, BLOCKS.EMBEDDED_ENTRY, entry, false);\n          logCommandPaletteAction('insert', {\n            nodeType: BLOCKS.EMBEDDED_ENTRY,\n          });\n          break;\n      }\n    },\n  });\n\n  onCreateAndEmbedEntity = async (contentTypeId, nodeType) => {\n    const { richTextAPI, editor, command } = this.props;\n    const { sdk } = richTextAPI;\n    removeCommand(editor, command);\n    const { createAsset, createEntry } = sdk.space;\n    const isAsset = contentTypeId === null;\n    const createEntity = () => (isAsset ? createAsset({}) : createEntry(contentTypeId, {}));\n    const entity = await createEntity();\n    const { id: entityId, type: entityType } = entity.sys;\n\n    nodeType === INLINES.EMBEDDED_ENTRY\n      ? insertInline(editor, entity.sys.id, false)\n      : insertBlock(editor, nodeType, entity);\n\n    richTextAPI.logCommandPaletteAction('insert', {\n      nodeType,\n    });\n\n    const { navigator } = sdk;\n    const openEntity = entityType === 'Asset' ? navigator.openAsset : navigator.openEntry;\n    return openEntity(entityId, { slideIn: true });\n  };\n\n  createContentTypeActions = async (actionBuilder, contentType) => {\n    const actions = await Promise.all([\n      actionBuilder.maybeBuildEmbedAction(BLOCKS.EMBEDDED_ENTRY, contentType, () => {\n        this.setState({ breadcrumb: contentType.name, isLoading: true });\n        this.createCommands(contentType);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildEmbedAction(INLINES.EMBEDDED_ENTRY, contentType, () => {\n        this.setState({ breadcrumb: contentType.name, isLoading: true });\n        this.createCommands(contentType, INLINES.EMBEDDED_ENTRY);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildCreateAndEmbedAction(BLOCKS.EMBEDDED_ENTRY, contentType, () =>\n        this.onCreateAndEmbedEntity(contentType.sys.id, BLOCKS.EMBEDDED_ENTRY)\n      ),\n      actionBuilder.maybeBuildCreateAndEmbedAction(INLINES.EMBEDDED_ENTRY, contentType, () =>\n        this.onCreateAndEmbedEntity(contentType.sys.id, INLINES.EMBEDDED_ENTRY)\n      ),\n    ]);\n    return actions.filter((action) => action);\n  };\n\n  createAssetActions = async (actionBuilder) => {\n    const actions = await Promise.all([\n      actionBuilder.maybeBuildEmbedAction(BLOCKS.EMBEDDED_ASSET, null, () => {\n        this.setState({ breadcrumb: 'Asset', isLoading: true });\n        this.createCommands(null, BLOCKS.EMBEDDED_ASSET);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildCreateAndEmbedAction(BLOCKS.EMBEDDED_ASSET, null, () =>\n        this.onCreateAndEmbedEntity(null, BLOCKS.EMBEDDED_ASSET)\n      ),\n    ]);\n    return actions.filter((action) => action);\n  };\n\n  handleScroll = (e) => {\n    if (e.target.nodeName !== 'UL') {\n      this.updatePanelPosition();\n    }\n  };\n\n  clearCommand = () => {\n    if (this.props.command !== '/') {\n      removeCommand(this.props.editor, this.props.command, 0);\n    }\n  };\n\n  createCommands = async (contentType, type, command) => {\n    this.setState({ isUpdating: true });\n    const allEntries = !contentType\n      ? await fetchAssets(this.props.richTextAPI.sdk, command)\n      : await fetchEntries(this.props.richTextAPI.sdk, contentType, command);\n\n    if (this.isComponentMounted) {\n      this.setState({\n        currentCommand: {\n          contentType,\n          type,\n          command,\n        },\n        isUpdating: false,\n        isLoading: false,\n        items: allEntries.map((entry) =>\n          this.createCommand(\n            entry.displayTitle,\n            entry.contentTypeName,\n            entry.entry,\n            type,\n            entry.description,\n            entry.thumbnail\n          )\n        ),\n      });\n    }\n  };\n\n  createInitialCommands = async () => {\n    const { sdk } = this.props.richTextAPI;\n\n    const allContentTypes = sdk.space.getCachedContentTypes();\n\n    this.setState({\n      isLoading: false,\n    });\n\n    const actionBuilder = new CommandPaletteActionBuilder(sdk);\n\n    const contentTypeActions = flatten(\n      await Promise.all(\n        allContentTypes.map((ct) => this.createContentTypeActions(actionBuilder, ct))\n      )\n    );\n\n    const assetActions = await this.createAssetActions(actionBuilder);\n\n    this.setState((prevState) => ({\n      items: [...prevState.items, ...contentTypeActions, ...assetActions],\n    }));\n  };\n\n  handleKeyboard = (e) => {\n    const isEscKey = isHotKey('esc', e); // ESC to close menu shouldn't blur editor.\n    if (isEscKey || isHotKey('down', e) || isHotKey('up', e) || isHotKey('enter', e)) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    if (isEscKey || isHotKey('tab', e)) {\n      this.setState({\n        isClosed: true,\n      });\n    }\n  };\n\n  render() {\n    // Todo: Revisit tab index.\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    /* eslint-disable jsx-a11y/tabindex-no-positive */\n    if (this.state.isClosed) {\n      return null;\n    }\n    const root = window.document.body;\n    return ReactDOM.createPortal(\n      <div\n        tabIndex=\"1\"\n        ref={(ref) => {\n          this.palette = ref;\n        }}\n        style={{\n          position: 'absolute',\n          outline: 'none',\n          minWidth: 200,\n          top: this.state.anchorPosition.top,\n          left: this.state.anchorPosition.left,\n        }}>\n        <InViewport\n          onOverflowBottom={() => {\n            if (this.state.panelPosition !== 'top') {\n              this.setState({ panelPosition: 'top' }, this.updatePanelPosition);\n            }\n          }}\n          onOverflowTop={() => {\n            if (this.state.panelPosition !== 'bottom') {\n              this.setState({ panelPosition: 'bottom' }, this.updatePanelPosition);\n            }\n          }}>\n          <CommandPanelMenu\n            searchString={this.props.command === '/' ? '' : this.props.command}\n            items={this.state.items}\n            isLoading={this.state.isLoading}\n            isUpdating={this.state.isUpdating}\n            onClose={() => {\n              this.setState({\n                isClosed: true,\n              });\n            }}\n            breadcrumb={this.state.breadcrumb}\n            richTextAPI={this.props.richTextAPI}\n          />\n        </InViewport>\n      </div>,\n      root\n    );\n  }\n\n  updatePanelPosition() {\n    const anchorRect = document.getSelection().getRangeAt(0).getBoundingClientRect();\n\n    this.setState((prevState) => ({\n      anchorPosition: {\n        top:\n          prevState.panelPosition === 'bottom'\n            ? anchorRect.bottom\n            : anchorRect.top - this.paletteDimensions.height,\n        left: anchorRect.left,\n      },\n    }));\n  }\n}\n\nexport default CommandPalette;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmbeddingEnabled } from './CommandPaletteService';\nimport { hasCommandPaletteDecoration, getCommandText } from './Util';\nimport CommandPanel from './CommandPanel';\nclass CommandPalette extends React.PureComponent {\n  static propTypes = {\n    editor: PropTypes.object,\n    richTextAPI: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { field } = this.props.richTextAPI.sdk;\n\n    this.state = {\n      embedsEnabled: isEmbeddingEnabled(field)\n    };\n  }\n\n  render() {\n    if (!hasCommandPaletteDecoration(this.props.editor) || !this.state.embedsEnabled) {\n      return null;\n    }\n\n    return (\n      <CommandPanel\n        editor={this.props.editor}\n        richTextAPI={this.props.richTextAPI}\n        command={getCommandText(this.props.editor)}\n      />\n    );\n  }\n}\n\nexport default CommandPalette;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CommandMark extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    editor: PropTypes.object,\n    attributes: PropTypes.object\n  };\n\n  render() {\n    // Todo: Revisit tab index.\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    /* eslint-disable jsx-a11y/tabindex-no-positive */\n    const { children, attributes } = this.props;\n    return (\n      <span tabIndex=\"1\" {...attributes} className=\"command-context\">\n        {children}\n      </span>\n    );\n  }\n}\n\nexport default CommandMark;\n","import React from 'react';\n\nimport { getDecorationOrDefault, hasCommandPaletteMarkType } from './Util';\nimport CommandPalette from './CommandPalette';\nimport CommandMark from './CommandMark';\n\nexport const CommandPalettePlugin = ({ richTextAPI }) => ({\n  /* eslint-disable react/display-name */\n  decorateNode: (_node, editor, next) => {\n    const others = next();\n\n    const decoration = getDecorationOrDefault(editor);\n\n    if (decoration) {\n      return [...others, decoration];\n    }\n\n    return [...others];\n  },\n  renderMark: (props, editor, next) => {\n    if (hasCommandPaletteMarkType(props.mark.type)) {\n      return (\n        <CommandMark attributes={props.attributes} editor={editor}>\n          {props.children}\n        </CommandMark>\n      );\n    }\n    return next();\n  },\n  renderEditor: (_props, editor, next) => {\n    const children = next();\n    return (\n      <React.Fragment>\n        {children}\n        <CommandPalette\n          anchor={editor.state.commandMark}\n          value={editor.value}\n          editor={editor}\n          richTextAPI={richTextAPI}\n        />\n      </React.Fragment>\n    );\n  }\n});\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { BoldPlugin } from './Bold';\nimport { ItalicPlugin } from './Italic';\nimport { UnderlinedPlugin } from './Underlined';\nimport { CodePlugin } from './Code';\nimport { QuotePlugin } from './Quote';\nimport { HyperlinkPlugin } from './Hyperlink';\nimport { SubscriptPlugin } from './Subscript';\nimport {SuperscriptPlugin } from './Superscript';\nimport {\n  Heading1Plugin,\n  Heading2Plugin,\n  Heading3Plugin,\n  Heading4Plugin,\n  Heading5Plugin,\n  Heading6Plugin\n} from './Heading';\n\nimport NewLinePlugin from './NewLinePlugin';\nimport { ParagraphPlugin } from './Paragraph';\n\nimport { EmbeddedAssetBlockPlugin, EmbeddedEntryBlockPlugin } from './EmbeddedEntityBlock';\nimport { EmbeddedEntryInlinePlugin } from './EmbeddedEntryInline';\n\nimport { ListPlugin } from './List';\nimport { HrPlugin } from './Hr';\n\nimport TrailingBlock from '@wikifactory/slate-trailing-block';\nimport { PastePlugin } from './Paste';\nimport { PasteHtmlPlugin } from './PasteHtml';\nimport { PasteTextPlugin } from './PasteText';\n\nimport { CommandPalettePlugin } from './CommandPalette';\nimport { InsertBeforeFirstVoidBlockPlugin } from './InsertBeforeFirstVoidBlock';\n\nimport schema from '../constants/Schema';\n\nexport function buildPlugins(richTextAPI) {\n  return [\n    { schema },\n    InsertBeforeFirstVoidBlockPlugin({ richTextAPI }),\n    BoldPlugin({ richTextAPI }),\n    ItalicPlugin({ richTextAPI }),\n    SubscriptPlugin({ richTextAPI }),\n    SuperscriptPlugin({ richTextAPI }),\n    UnderlinedPlugin({ richTextAPI }),\n    CodePlugin({ richTextAPI }),\n    QuotePlugin({ richTextAPI }),\n    HyperlinkPlugin({ richTextAPI }),\n    Heading1Plugin({ richTextAPI }),\n    Heading2Plugin({ richTextAPI }),\n    Heading3Plugin({ richTextAPI }),\n    Heading4Plugin({ richTextAPI }),\n    Heading5Plugin({ richTextAPI }),\n    Heading6Plugin({ richTextAPI }),\n    ParagraphPlugin(),\n    HrPlugin({ richTextAPI }),\n    EmbeddedEntryInlinePlugin({ richTextAPI }),\n    EmbeddedEntryBlockPlugin({ richTextAPI }),\n    EmbeddedAssetBlockPlugin({ richTextAPI }),\n    ListPlugin({ richTextAPI }),\n    PastePlugin({ richTextAPI }),\n    PasteHtmlPlugin(),\n    PasteTextPlugin(),\n    CommandPalettePlugin({ richTextAPI }),\n    TrailingBlock({ type: BLOCKS.PARAGRAPH }),\n    NewLinePlugin()\n  ];\n}\n","import isHotkey from 'is-hotkey';\nimport { isVoidBlockFirstAndFocused, insertParagraphAndFocusToStartOfDocument } from './Util';\n\n/**\n *  Provides a way to insert content before the first void block in the document.\n */\nexport const InsertBeforeFirstVoidBlockPlugin = () => ({\n  onKeyDown: (event, editor, next) => {\n    if (isHotkey('enter', event) && isVoidBlockFirstAndFocused(editor)) {\n      insertParagraphAndFocusToStartOfDocument(editor);\n      return;\n    }\n\n    return next();\n  }\n});\n","import { BLOCKS } from '@contentful/rich-text-types';\n/**\n * Checks if the first block in the document is void and is focused.\n *\n * @param {Slate.Editor} editor\n * @returns {Boolean}\n */\nexport function isVoidBlockFirstAndFocused(editor) {\n  return (\n    editor.value.document.getBlocks().first() === editor.value.focusBlock &&\n    editor.isVoid(editor.value.focusBlock)\n  );\n}\n\n/**\n * Inserts and focuses an empty paragraph as a first child to the document.\n *\n * @param {Slate.Editor} editor\n * @returns {void}\n */\n\nexport function insertParagraphAndFocusToStartOfDocument(editor) {\n  editor\n    .splitBlock()\n    .moveToStartOfDocument()\n    .setBlocks(BLOCKS.PARAGRAPH)\n    .focus();\n}\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { toggleChange } from '../shared/BlockToggleDecorator';\nimport CommonNode from '../shared/NodeDecorator';\n\nconst plugin = (type, tagName, tagProps, hotkey) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === type) {\n        return CommonNode(tagName, tagProps)(props);\n      }\n      return next();\n    },\n    onKeyDown: (e, editor, next) => {\n      if (isHotkey(hotkey, e)) {\n        editor.call(toggleChange, type);\n        return;\n      }\n      return next();\n    }\n  };\n};\n\n// TODO: move hotkeys to components\nexport const ParagraphPlugin = (type = BLOCKS.PARAGRAPH) =>\n  // Can't use <p/> as for e.g. links we need to show a tooltip inside.\n  plugin(type, 'div', {}, ['mod+opt+0']);\n","import { getEventTransfer } from 'slate-react';\nimport { create as createSerializer } from './Serializer';\n\n/**\n * The plugin allows to paste html to the Structured Text Editor\n * by deserializing html content from ClipboardEvent into\n * Slate document.\n */\nexport const PasteHtmlPlugin = () => {\n  const serializer = createSerializer();\n  return {\n    onPaste(event, editor, next) {\n      const transfer = getEventTransfer(event);\n      if (transfer.type != 'html') {\n        next();\n        return;\n      }\n      const { document } = serializer.deserialize(transfer.html);\n\n      editor.insertFragment(document);\n      return;\n    }\n  };\n};\n","import { getEventTransfer } from 'slate-react';\nimport PlainSerializer from 'slate-plain-serializer';\nimport { BLOCKS } from '@contentful/rich-text-types';\n\n/**\n * This plugin changes how pasting text is handled in the Rich text editor by\n * deserializing text content from ClipboardEvent into a Slate document. We\n * use it to handle converting new lines to paragraphs. Without this plugin,\n * lines of text separated by an empty new line will result in extra empty\n * paragraphs.\n */\nexport const PasteTextPlugin = () => {\n  return {\n    onPaste(event, editor, next) {\n      const transfer = getEventTransfer(event);\n      if (transfer.type !== 'text') {\n        next();\n        return;\n      }\n\n      const string = transfer.text;\n\n      const { document } = PlainSerializer.deserialize(string, {\n        defaultBlock: BLOCKS.PARAGRAPH,\n        delimiter: '\\n\\n' // We look for double new lines as a delimiter for paragraphs\n      });\n\n      editor.insertFragment(document);\n      return;\n    }\n  };\n};\n","import isHotkey from 'is-hotkey';\n\nexport default function() {\n  return {\n    onKeyDown(event, editor, next) {\n      if (isHotkey('shift+enter', event)) {\n        editor.insertText('\\n');\n        return;\n      }\n      return next();\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, DropdownList, Button } from '@contentful/forma-36-react-components';\n\nclass EntryEmbedDropdown extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    onToggle: PropTypes.func,\n  };\n\n  render() {\n    const { onToggle, isOpen, onClose, children } = this.props;\n    return (\n      <Dropdown\n        className=\"toolbar-entry-dropdown\"\n        position=\"bottom-right\"\n        toggleElement={\n          <Button\n            onClick={onToggle}\n            data-test-id=\"toolbar-entry-dropdown-toggle\"\n            className=\"toolbar-entry-dropdown-toggle\"\n            indicateDropdown\n            buttonType=\"muted\"\n            size=\"small\"\n            icon=\"Plus\"\n            disabled={this.props.disabled}>\n            Embed\n          </Button>\n        }\n        isOpen={isOpen}\n        onClose={onClose}>\n        <DropdownList className=\"toolbar-entry-dropdown-list\">{children}</DropdownList>\n      </Dropdown>\n    );\n  }\n}\n\nexport default EntryEmbedDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EditorToolbar, EditorToolbarDivider } from '@contentful/forma-36-react-components';\n\nimport Bold from '../plugins/Bold';\nimport Italic from '../plugins/Italic';\nimport Underlined from '../plugins/Underlined';\nimport Superscript from '../plugins/Superscript';\nimport Subscript from '../plugins/Subscript';\nimport Code from '../plugins/Code';\nimport Quote from '../plugins/Quote';\nimport {\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n  Heading5,\n  Heading6,\n  Paragraph,\n  HeadingDropdown,\n} from '../plugins/Heading';\n\nimport Hyperlink from '../plugins/Hyperlink';\nimport { css } from 'emotion';\n\nimport EmbeddedEntryInline from '../plugins/EmbeddedEntryInline';\nimport EmbeddedEntityBlock from '../plugins/EmbeddedEntityBlock';\nimport EntryEmbedDropdown from '../plugins/EntryEmbedDropdown';\n\nimport { UnorderedList, OrderedList } from '../plugins/List';\nimport Hr from '../plugins/Hr';\n\nimport { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';\n\nimport { isNodeTypeEnabled, isMarkEnabled } from '../validations';\n\nconst styles = {\n  embedActionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    webkitAlignSelf: 'flex-start',\n    alignSelf: 'flex-start',\n    msFlexItemAlign: 'start',\n    marginLeft: 'auto',\n  }),\n  formattingOptionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    msFlexAlign: 'center',\n    webkitBoxAlign: 'center',\n    alignItems: 'center',\n    msFlexWrap: 'wrap',\n    flexWrap: 'wrap',\n    marginRight: '20px',\n  }),\n};\n\nexport default class Toolbar extends React.Component {\n  static propTypes = {\n    richTextAPI: PropTypes.object.isRequired,\n    isDisabled: PropTypes.bool.isRequired,\n    editor: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  hasMounted = false;\n\n  isReadyToSetFocusProgrammatically = false;\n\n  state = {\n    headingMenuOpen: false,\n    canAccessAssets: false,\n    ...getValidationInfo(this.props.richTextAPI.sdk.field),\n  };\n\n  componentDidMount() {\n    this.hasMounted = true;\n    this.props.richTextAPI.sdk.access.can('read', 'Asset').then((canReadAssets) => {\n      if (this.hasMounted) {\n        // Prevent setting state on unmounted component\n        this.setState({ canAccessAssets: canReadAssets });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.hasMounted = false;\n  }\n\n  onChange = (...args) => {\n    this.setState({ headingMenuOpen: false });\n    this.props.onChange(...args);\n  };\n\n  toggleEmbedDropdown = () =>\n    this.setState((prevState) => ({\n      isEmbedDropdownOpen: !prevState.isEmbedDropdownOpen,\n    }));\n\n  handleEmbedDropdownClose = () =>\n    this.setState({\n      isEmbedDropdownOpen: false,\n    });\n\n  renderEmbeds = (props) => {\n    const field = this.props.richTextAPI.sdk.field;\n\n    const inlineEntryEmbedEnabled = isNodeTypeEnabled(field, INLINES.EMBEDDED_ENTRY);\n    const blockEntryEmbedEnabled = isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ENTRY);\n    const blockAssetEmbedEnabled =\n      this.state.canAccessAssets && isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ASSET);\n\n    const numEnabledEmbeds = [\n      inlineEntryEmbedEnabled,\n      blockEntryEmbedEnabled,\n      blockAssetEmbedEnabled,\n    ].filter(Boolean).length;\n\n    return (\n      <div className={styles.embedActionsWrapper}>\n        {numEnabledEmbeds > 1 ? (\n          <EntryEmbedDropdown\n            onToggle={this.toggleEmbedDropdown}\n            isOpen={this.state.isEmbedDropdownOpen}\n            disabled={props.disabled}\n            onClose={this.handleEmbedDropdownClose}>\n            {blockEntryEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ENTRY} {...props} />\n            )}\n            {inlineEntryEmbedEnabled && <EmbeddedEntryInline {...props} />}\n            {blockAssetEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ASSET} {...props} />\n            )}\n          </EntryEmbedDropdown>\n        ) : (\n          <React.Fragment>\n            {blockEntryEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ENTRY} isButton {...props} />\n            )}\n            {inlineEntryEmbedEnabled && <EmbeddedEntryInline isButton {...props} />}\n            {blockAssetEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ASSET} isButton {...props} />\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n\n  toggleHeadingMenu = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      headingMenuOpen: !prevState.headingMenuOpen,\n    }));\n  };\n\n  closeHeadingMenu = () =>\n    this.setState({\n      headingMenuOpen: false,\n    });\n\n  render() {\n    const { editor, isDisabled, richTextAPI } = this.props;\n    if (editor.value.selection.isFocused) {\n      // If the Slate input has ever been focused by the user, we can now also\n      // programmatically use `editor.setFocus()` without undesired side-effects.\n      this.isReadyToSetFocusProgrammatically = true;\n    }\n    const props = {\n      editor,\n      onToggle: this.onChange,\n      onCloseEmbedMenu: this.toggleEmbedDropdown,\n      disabled: isDisabled,\n      richTextAPI,\n      canAutoFocus: this.isReadyToSetFocusProgrammatically,\n    };\n    const { field } = richTextAPI.sdk;\n    const { isAnyHyperlinkEnabled, isAnyListEnabled, isAnyMarkEnabled } = this.state;\n    const currentBlockType = props.editor.value.blocks.getIn([0, 'type']);\n    return (\n      <EditorToolbar data-test-id=\"toolbar\">\n        <div className={styles.formattingOptionsWrapper}>\n          <HeadingDropdown\n            onToggle={this.toggleHeadingMenu}\n            isToggleActive={true}\n            isOpen={this.state.headingMenuOpen}\n            onClose={this.closeHeadingMenu}\n            currentBlockType={currentBlockType}\n            disabled={props.disabled}>\n            <Paragraph {...props} />\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_1) && <Heading1 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_2) && <Heading2 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_3) && <Heading3 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_4) && <Heading4 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_5) && <Heading5 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_6) && <Heading6 {...props} />}\n          </HeadingDropdown>\n          {isAnyMarkEnabled && <EditorToolbarDivider testId=\"mark-divider\" />}\n          {isMarkEnabled(field, MARKS.BOLD) && <Bold {...props} />}\n          {isMarkEnabled(field, MARKS.ITALIC) && <Italic {...props} />}\n          {isMarkEnabled(field, MARKS.UNDERLINE) && <Underlined {...props} />}\n          {isMarkEnabled(field, MARKS.CODE) && <Code {...props} />}\n          {isMarkEnabled(field, MARKS.SUPERSCRIPT) && <Superscript {...props} />}\n          {isMarkEnabled(field, MARKS.SUBSCRIPT) && <Subscript {...props} />}\n          {isAnyHyperlinkEnabled && (\n            <React.Fragment>\n              <EditorToolbarDivider testId=\"hyperlink-divider\" />\n              <Hyperlink {...props} />\n            </React.Fragment>\n          )}\n          {isAnyListEnabled && <EditorToolbarDivider testId=\"list-divider\" />}\n          {isNodeTypeEnabled(field, BLOCKS.UL_LIST) && <UnorderedList {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.OL_LIST) && <OrderedList {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.QUOTE) && <Quote {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.HR) && <Hr {...props} />}\n        </div>\n        {this.renderEmbeds(props)}\n      </EditorToolbar>\n    );\n  }\n}\n\nfunction getValidationInfo(field) {\n  const isAnyMarkEnabled =\n    isMarkEnabled(field, MARKS.BOLD) ||\n    isMarkEnabled(field, MARKS.ITALIC) ||\n    isMarkEnabled(field, MARKS.UNDERLINE) ||\n    isMarkEnabled(field, MARKS.CODE) ||\n    isMarkEnabled(field, MARKS.SUPERSCRIPT) ||\n    isMarkEnabled(field, MARKS.SUBSCRIPT);\n\n  const isAnyHyperlinkEnabled =\n    isNodeTypeEnabled(field, INLINES.HYPERLINK) ||\n    isNodeTypeEnabled(field, INLINES.ASSET_HYPERLINK) ||\n    isNodeTypeEnabled(field, INLINES.ENTRY_HYPERLINK);\n\n  const isAnyListEnabled =\n    isNodeTypeEnabled(field, BLOCKS.UL_LIST) ||\n    isNodeTypeEnabled(field, BLOCKS.OL_LIST) ||\n    isNodeTypeEnabled(field, BLOCKS.QUOTE) ||\n    isNodeTypeEnabled(field, BLOCKS.HR);\n  return {\n    isAnyMarkEnabled,\n    isAnyHyperlinkEnabled,\n    isAnyListEnabled,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nconst styles = {\n  nativeSticky: css`\n    position: -webkit-sticky;\n    position: sticky;\n    top: -1px;\n    z-index: 2;\n  `,\n};\n\nconst StickyToolbarWrapper = ({ isDisabled, children }) => (\n  <div className={isDisabled ? '' : styles.nativeSticky}>{children}</div>\n);\n\nStickyToolbarWrapper.propTypes = {\n  isDisabled: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default StickyToolbarWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Editor } from 'slate-react';\nimport { Value, Editor as BasicEditor } from 'slate';\nimport noop from 'lodash/noop';\nimport debounce from 'lodash/debounce';\nimport { List, is } from 'immutable';\nimport deepEquals from 'fast-deep-equal';\n\nimport { BLOCKS, EMPTY_DOCUMENT } from '@contentful/rich-text-types';\nimport { toContentfulDocument, toSlatejsDocument } from '@contentful/contentful-slatejs-adapter';\nimport { EntityProvider } from '@contentful/field-editor-reference';\n\nimport schema from './constants/Schema';\nimport { createRichTextAPI } from './plugins/shared/PluginApi';\nimport { buildPlugins } from './plugins';\nimport Toolbar from './Toolbar';\nimport StickyToolbarWrapper from './Toolbar/StickyToolbarWrapper';\nimport { FieldConnector } from '@contentful/field-editor-shared';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst STYLE_EDITOR_BORDER = `1px solid ${tokens.colorElementDark}`;\n\nconst styles = {\n  root: css({\n    position: 'relative',\n  }),\n  editor: css({\n    borderRadius: '0 0 3px 3px',\n    border: STYLE_EDITOR_BORDER,\n    borderTop: 0,\n    padding: '20px',\n    fontSize: tokens.spacingM,\n    minHeight: '400px',\n    background: tokens.colorWhite,\n    outline: 'none',\n    whiteSpace: 'pre-wrap',\n    overflowWrap: 'break-word',\n    webkitUserModify: 'read-write-plaintext-only',\n    a: {\n      span: {\n        cursor: 'not-allowed',\n        '&:hover': {\n          cursor: 'not-allowed',\n        },\n      },\n    },\n  }),\n  hiddenToolbar: css({\n    borderTop: STYLE_EDITOR_BORDER,\n  }),\n  enabled: css({\n    background: tokens.colorWhite,\n    a: {\n      span: {\n        cursor: 'pointer',\n        '&:hover': {\n          cursor: 'pointer',\n        },\n      },\n    },\n  }),\n  disabled: css({\n    background: tokens.colorElementLightest,\n  }),\n};\n\nconst createSlateValue = (contentfulDocument) => {\n  const document = toSlatejsDocument({\n    document: contentfulDocument,\n    schema,\n  });\n  const value = Value.fromJSON({\n    document,\n    schema,\n  });\n  // Normalize document instead of doing this in the Editor instance as this would\n  // trigger unwanted operations that would result in an unwanted version bump.\n  // TODO: This normalization step wouldn't be necessary if we had a perfect\n  // adapter for the version of Slate we are currently using.\n  const editor = new BasicEditor({ readOnly: true, value }, { normalize: true });\n  const normalizedValue = editor.value;\n  return normalizedValue;\n};\n\nconst EMPTY_SLATE_DOCUMENT = createSlateValue(EMPTY_DOCUMENT);\n\nexport class ConnectedRichTextEditor extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.shape({\n      field: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        locale: PropTypes.string.isRequired,\n      }).isRequired,\n      access: PropTypes.shape({\n        can: PropTypes.func.isRequired,\n      }).isRequired,\n      parameters: PropTypes.shape({\n        instance: PropTypes.shape({\n          getEntryUrl: PropTypes.func,\n          getAssetUrl: PropTypes.func,\n        }).isRequired,\n      }),\n    }).isRequired,\n    value: PropTypes.object,\n    isDisabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onAction: PropTypes.func,\n    isToolbarHidden: PropTypes.bool,\n    actionsDisabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    value: EMPTY_DOCUMENT,\n    onChange: noop,\n    onAction: noop,\n    isDisabled: false,\n    isToolbarHidden: false,\n    actionsDisabled: false,\n  };\n\n  state = {\n    lastOperations: List(),\n    value:\n      this.props.value && this.props.value.nodeType === BLOCKS.DOCUMENT\n        ? createSlateValue(this.props.value)\n        : EMPTY_SLATE_DOCUMENT,\n  };\n\n  editor = React.createRef();\n\n  richTextAPI = createRichTextAPI({\n    sdk: this.props.sdk,\n    onAction: this.props.onAction,\n  });\n\n  slatePlugins = buildPlugins(this.richTextAPI);\n\n  onChange = (editor) => {\n    const { value, operations } = editor;\n    this.setState({\n      value,\n      lastOperations: operations.filter(isRelevantOperation),\n    });\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.isDisabled !== nextProps.isDisabled) {\n      return true;\n    }\n    const isStateValueUpdate = !is(this.state.value, nextState.value);\n    const isPropsValueUpdate = this.props.value !== nextProps.value;\n    return isStateValueUpdate || isPropsValueUpdate;\n  }\n\n  callOnChange = debounce(() => {\n    const doc = toContentfulDocument({\n      document: this.state.value.document.toJSON(),\n      schema,\n    });\n    this.props.onChange(doc);\n  }, 500);\n\n  componentDidUpdate(prevProps) {\n    /* eslint-disable react/no-did-update-set-state */\n    const isIncomingChange = () => !deepEquals(prevProps.value, this.props.value);\n    const isDocumentChanged = !this.state.lastOperations.isEmpty();\n\n    if (!this.props.isDisabled && isDocumentChanged) {\n      this.setState({ lastOperations: List() }, () => this.callOnChange());\n    } else if (isIncomingChange()) {\n      this.setState({\n        value: createSlateValue(this.props.value),\n      });\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleKeyDown = (event, editor, next) => {\n    const ESC = 27;\n\n    if (event.keyCode === ESC) {\n      event.currentTarget.blur();\n    }\n\n    return next();\n  };\n\n  render() {\n    const classNames = cx(\n      styles.editor,\n      this.props.isDisabled ? styles.disabled : styles.enabled,\n      this.props.isToolbarHidden && styles.hiddenToolbar\n    );\n\n    return (\n      <div className={styles.root} data-test-id=\"rich-text-editor\">\n        {!this.props.isToolbarHidden && (\n          <StickyToolbarWrapper isDisabled={this.props.isDisabled}>\n            <Toolbar\n              editor={this.editor.current || new BasicEditor({ readOnly: true })}\n              onChange={this.onChange}\n              isDisabled={this.props.isDisabled}\n              richTextAPI={this.richTextAPI}\n            />\n          </StickyToolbarWrapper>\n        )}\n\n        <Editor\n          data-test-id=\"editor\"\n          value={this.state.value}\n          ref={this.editor}\n          onChange={this.onChange}\n          onKeyDown={this.handleKeyDown}\n          plugins={this.slatePlugins}\n          readOnly={this.props.isDisabled}\n          className={classNames}\n          actionsDisabled={this.props.actionsDisabled}\n          options={{\n            normalize: false, // No initial normalizaiton as we pass a normalized document.\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * Returns whether a given operation is relevant enough to trigger a save.\n *\n * @param {slate.Operation} op\n * @returns {boolean}\n */\nfunction isRelevantOperation(op) {\n  if (op.type === 'set_value') {\n    if (op.properties.data) {\n      // Relevant for undo/redo that can be empty ops that we want to ignore.\n      return false;\n    }\n  } else if (op.type === 'set_selection') {\n    return false;\n  }\n  return true;\n}\n\nexport default function RichTextEditor(props) {\n  /* eslint-disable react/prop-types */\n  const { sdk, isInitiallyDisabled, ...otherProps } = props;\n  return (\n    <EntityProvider sdk={sdk}>\n      <FieldConnector\n        throttle={0}\n        field={sdk.field}\n        isInitiallyDisabled={isInitiallyDisabled}\n        isEmptyValue={(value) => {\n          return !value || deepEquals(value, EMPTY_DOCUMENT);\n        }}\n        isEqualValues={(value1, value2) => {\n          return deepEquals(value1, value2);\n        }}>\n        {({ lastRemoteValue, disabled, setValue, externalReset }) => {\n          return (\n            <ConnectedRichTextEditor\n              {...otherProps}\n              // on external change reset component completely and init with initial value again\n              key={`rich-text-editor-${externalReset}`}\n              value={lastRemoteValue}\n              sdk={sdk}\n              isDisabled={disabled}\n              onChange={(value) => {\n                setValue(value);\n              }}\n            />\n          );\n        }}\n      </FieldConnector>\n    </EntityProvider>\n  );\n}\n\nRichTextEditor.defaultProps = {\n  isInitiallyDisabled: true,\n};\n","import React from 'react';\nimport { ModalDialogLauncher } from '@contentful/field-editor-shared';\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const openRichTextDialog = (sdk) => (options) => {\n  if (options.parameters && options.parameters.type === 'rich-text-hyperlink-dialog') {\n    return ModalDialogLauncher.openDialog(options, ({ onClose }) => {\n      return <HyperlinkDialog {...options.parameters} onClose={onClose} sdk={sdk} />;\n    });\n  }\n  return Promise.reject();\n};\n","import React from 'react';\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const renderRichTextDialog = (sdk) => {\n  const parameters = sdk.parameters.invocation;\n  if (parameters.type === 'rich-text-hyperlink-dialog') {\n    sdk.window.startAutoResizer();\n    return <HyperlinkDialog {...sdk.parameters.invocation} onClose={sdk.close} sdk={sdk} />;\n  }\n  return <div />;\n};\n"],"names":["opt","config","types","BLOCKS","OL_LIST","UL_LIST","typeItem","LIST_ITEM","typeDefault","PARAGRAPH","EditList","mapVoidTypes","nodeTypes","fromPairs","map","nodeType","isVoid","listPlugin","ListPlugin","document","nodes","TOP_LEVEL_BLOCKS","blocks","Object","values","INLINES","objects","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","VOID_BLOCKS","schema","QUOTE","match","CONTAINERS","type","min","normalize","editor","error","code","unwrapBlockByKey","node","key","inlines","HYPERLINK","ENTRY_HYPERLINK","ASSET_HYPERLINK","EMBEDDED_ENTRY","createActionLogger","onAction","origin","name","data","createRichTextAPI","sdk","logViewportAction","logShortcutAction","logToolbarAction","logCommandPaletteAction","TOOLBAR_PLUGIN_PROP_TYPES","richTextAPI","PropTypes","shape","object","isRequired","func","onToggle","disabled","bool","isButton","canAutoFocus","ToolbarIcon","handleClick","event","preventDefault","props","render","this","title","React","EditorToolbarButton","icon","tooltip","label","isActive","onClick","Component","propTypes","string","MarkPropTypes","attributes","children","mark","NodePropTypes","haveMarks","value","activeMarks","some","haveBlocks","haveInlines","inline","haveTextInSomeBlocks","size","block","text","styles","bold","css","color","fontWeight","tokens","fontWeightDemiBold","italic","fontStyle","lineHeight","fontFamily","fontStackMonospace","fontSize","tagName","hotkey","renderMark","_editor","next","Tag","tagProps","CommonMark","displayName","markDecorator","className","onKeyDown","isHotkey","toggleMark","action","markType","toolbarActionHandlerWithSafeAutoFocus","component","customHandler","selection","isFocused","focus","Mark","handleToggle","_this","React.createElement","Bold","markToggleDecorator","MARKS","BOLD","ItalicPlugin","markPlugin","ITALIC","Italic","UnderlinedPlugin","UNDERLINE","Underlined","CodePlugin","CODE","Code","toggleChange","setBlocks","isBlockActive","applyChange","Block","isSelectionInQuote","ancestor","range","start","startBlock","getClosestBlock","getParent","unwrapBlock","wrapBlock","headingCss","fontWeightMedium","margin","spacingS","paragraph","lineHeightDefault","marginBottom","blockquote","borderLeft","colorElementLight","paddingLeft","background","padding","colorTextMid","borderRadius","textLink","orderedList","listStyleType","unorderedList","listItem","listStyle","spacingL","heading1","heading2","heading3","heading4","heading5","heading6","CommonNode","camelCase","QuotePlugin","defaultType","renderNode","commonNode","e","newPlugin","Blockquote","blockToggleDecorator","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","FetchingWrappedEntryCard","useEntities","loadEntry","entries","entryId","onEntityFetchComplete","MissingEntityCard","entityType","isDisabled","onRemove","EntryCard","loading","contentType","space","getCachedContentTypes","find","sys","id","WrappedEntryCard","getAsset","getEntityScheduledActions","entryUrl","getEntryUrl","isSelected","localeCode","locale","defaultLocaleCode","locales","onEdit","isClickable","FetchingWrappedAssetCard","loadAsset","assets","assetId","asset","AssetCard","isLoading","src","href","WrappedAssetCard","getAssetUrl","entityToLink","entity","linkType","HyperlinkDialog","handleSubmit","onClose","getValue","selectEntry","entitySelectorConfigs","Entry","contentTypes","dialogs","selectSingleEntry","setTargetEntity","selectAsset","Asset","selectSingleAsset","uri","target","isEntityLink","Boolean","entityLinks","allowedHyperlinkTypes","includes","setState","isLinkComplete","hideText","labels","EntityProvider","Fragment","Modal","Content","renderFields","Controls","Button","buttonType","testId","confirm","_this2","isUriInputAutoFocused","Form","TextField","required","labelText","onChange","_this3","textInputProps","autoFocus","isFeaturingEntitySelector","SelectField","selectProps","Option","placeholder","helpText","renderEntityField","entityLink","isEntitySelectorVisible","FormLabel","htmlFor","TextLink","marginLeft","_this4","renderEntitySelector","marginTop","oneOf","arrayOf","defaultProps","openHyperlinkDialog","isNew","showTextInput","openCurrent","width","shouldCloseOnEscapePress","shouldCloseOnOverlayClick","allowHeightOverflow","parameters","field","flow","v","get","validations","newEntitySelectorConfigFromRichTextField","getEntityTypeFromRichTextNode","getLinkedContentTypeIdsForNodeType","words","split","indexOf","isFormattingOptionEnabled","validationType","nodeTypeOrMark","enabledFormattings","getRichTextValidation","isNodeTypeEnabled","isMarkEnabled","HYPERLINK_TYPES","nodeToHyperlinkType","getAllowedHyperlinkTypes","hyperlinkTypes","filter","getEntitySelectorConfigs","mayEditLink","isExpanded","hasHyperlink","hasOnlyHyperlinkInlines","every","toggleLink","logAction","removeLinks","insertLink","change","blur","fragment","trim","last","insertBlock","insertText","moveFocusForward","wrapLink","linkTypeToNodeType","unwrapInline","editLink","link","toJSON","oldUri","oldTarget","setInlines","wrapInline","moveToEnd","HyperlinkToolbarIcon","hyperlinkTooltipStyles","entityContentType","colorTextLightest","marginRight","spacingXs","content","entityTitle","separator","hyperlinkWrapper","display","position","a","hyperlink","fill","textColorDark","hyperlinkIEFallback","textDecoration","hyperlinkIcon","top","height","webkitTransition","transition","browser","detectBrowser","SUPPORTS_NATIVE_SLATE_HYPERLINKS","entityId","getEntity","getEntry","contentTypeId","getContentType","entityHelpers","getEntryTitle","defaultTitle","getAssetTitle","entityDescription","getEntityDescription","jobs","entityStatus","getEntryStatus","contentTypeName","EntityStatusTag","statusLabel","tagType","published","draft","archived","changed","EntityHyperlinkTooltip","useState","requestStatus","setRequestStatus","useEffect","fetchAllData","entityInfo","console","log","toLowerCase","str","substr","replace","ScheduleTooltipContent","job","jobsCount","Hyperlink","isHotKey","stopPropagation","role","tabIndex","renderEntityLink","renderLink","test","Tooltip","tooltipContainer","targetWrapperClassName","place","maxWidth","rel","cx","noop","HyperlinkPlugin","isHyperlink","moveToRangeOfNode","normalizeNode","getInlines","inlineNode","unwrapInlineByKey","SubscriptPlugin","SUBSCRIPT","Subscript","SuperscriptPlugin","SUPERSCRIPT","Superscript","root","button","span","h1","h2","h3","h4","h5","h6","getStyleForType","ToolbarDropdownListItem","DropdownListItem","handleSelect","contentWidthDefault","svg","blockTitles","EMBEDDED_ASSET","HeadingDropdown","getStyleNameForChange","currentBlockType","isOpen","Dropdown","toggleElement","indicateDropdown","DropdownList","newHeadingDropdownItem","Heading","blockSelectDecorator","Paragraph","shouldToggle","offset","initialRange","splitBlock","setBlocksAtRange","Heading1Plugin","Heading2Plugin","Heading3Plugin","Heading4Plugin","Heading5Plugin","Heading6Plugin","Heading1","Heading2","Heading3","Heading4","Heading5","Heading6","selectEntityAndInsert","baseConfig","selectEntity","withCreate","focusNextLine","linkedEntityBlock","createNode","EntityLinkToolbarIcon","onCloseEmbedMenu","handleAction","getEntityTypeFromNodeType","baseClass","Icon","LinkedEntityBlock","handleEditClick","getEntitySys","navigator","openAsset","openEntry","slideIn","handleRemoveClick","removeNodeByKey","readOnly","actionsDisabled","instance","EmbeddedEntityBlockPlugin","EntityLinkBlock","hasBlockOfType","createInlineNode","insertInline","moveToStartOfNextText","selectEntryAndInsert","canInsertInline","EntryLinkToolbarIcon","scheduledIcon","verticalAlign","spacing2Xs","FetchingWrappedInlineEntryCard","InlineEntryCard","selected","status","dropdownListElements","isReadOnly","ScheduledIconWithTooltip","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","EmbeddedEntryInline","EmbeddedEntryInlinePlugin","end","hasOnlyInlineEntryInSelection","utils","changes","unwrapList","wrapInList","isSelectionInList","getCurrentList","currentList","setNodeByKey","list","UnorderedList","listToggleDecorator","OrderedList","hr","spacingM","colorElementMid","hrSelected","colorPrimary","Hr","HR","getCharacterCount","contentfulSlateJSAdapter","documentToPlainTextString","PastePlugin","onPaste","_event","characterCountSelection","global","getSelection","characterCountBefore","setTimeout","characterCountAfter","BLOCK_TAGS","p","ul","ol","MARK_TAGS","strong","b","em","u","sup","sub","RULES","deserialize","el","ownerDocument","querySelector","startsWith","isGoogleWrapper","childNodes","marks","style","isGoogleBold","isGoogleItalic","isGoogleUnderline","leaves","textContent","getAttribute","classList","contains","getCommandText","startText","textBefore","exec","removeCommand","command","anchorOffset","removeTextByKey","fetchAssets","query","getAssets","items","displayTitle","fields","thumbnail","file","url","fetchEntries","getEntries","content_type","all","description","isValidLinkedContentType","embedType","val","typeVal","linkContentType","reduce","pre","cur","ct","CommandPaletteActionBuilder","maybeBuildEmbedAction","callback","buildAction","maybeBuildCreateAndEmbedAction","access","can","actionType","isAsset","isInline","group","commandPanel","colorWhite","boxShadow","border","colorElementDark","fontStackPrimary","overflowY","commandPanelList","item","fontSizeM","borderBottom","colorTextDark","divider","letterSpacing","letterSpacingWide","fontSizeS","textTransform","skeletonContainer","textAlign","whiteSpace","overflow","textOverflow","alignItems","navBar","bottom","colorElementLightest","loader","instruction","colorTextLight","closeButton","itemPropType","CommandPanelItem","listItemRef","componentDidUpdate","scrollIntoView","index","classNames","ref","alt","number","Instruction","CommandPanel","selectedKey","handleKeyboard","selectedItem","renderNavigationBar","SectionHeading","breadcrumb","IconButton","iconProps","renderStatusBar","instructions","isUpdating","Spinner","renderSkeleton","SkeletonContainer","SkeletonBodyText","numberOfLines","getDerivedStateFromProps","itemsHasUpdated","originalItems","searchStringHasUpdated","searchString","originalSearchString","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","renderGroups","groups","uniqBy","groupName","renderItems","_this5","cn","DEFAULT_POSITION","left","CommandPalette","anchorPosition","panelPosition","paletteDimensions","bindEventListeners","handleScroll","handleOutsideClick","removeEventListeners","palette","isClosed","requestUpdate","throttle","currentCommand","createCommands","leading","trailing","createCommand","onCreateAndEmbedEntity","createAsset","createEntry","createEntity","createContentTypeActions","actionBuilder","clearCommand","createAssetActions","nodeName","updatePanelPosition","allEntries","isComponentMounted","createInitialCommands","allContentTypes","flatten","contentTypeActions","assetActions","prevState","isEscKey","getBoundingClientRect","cancel","window","body","ReactDOM","createPortal","outline","minWidth","InViewport","onOverflowBottom","onOverflowTop","CommandPanelMenu","anchorRect","getRangeAt","PureComponent","embedsEnabled","decorations","getDecorations","isEmpty","commandPaletteDecoration","d","hasCommandPaletteDecoration","CommandMark","CommandPalettePlugin","decorateNode","_node","others","decoration","inputValue","anchor","getDecorationOrDefault","renderEditor","_props","commandMark","buildPlugins","getBlocks","first","focusBlock","isVoidBlockFirstAndFocused","moveToStartOfDocument","insertParagraphAndFocusToStartOfDocument","EditListWrapper","serializer","HtmlSerializer","rules","transfer","getEventTransfer","html","insertFragment","PlainSerializer","defaultBlock","delimiter","TrailingBlock","EntryEmbedDropdown","embedActionsWrapper","webkitAlignSelf","alignSelf","msFlexItemAlign","formattingOptionsWrapper","msFlexAlign","webkitBoxAlign","msFlexWrap","flexWrap","Toolbar","hasMounted","isReadyToSetFocusProgrammatically","headingMenuOpen","canAccessAssets","getValidationInfo","toggleEmbedDropdown","isEmbedDropdownOpen","handleEmbedDropdownClose","renderEmbeds","inlineEntryEmbedEnabled","blockEntryEmbedEnabled","blockAssetEmbedEnabled","numEnabledEmbeds","EmbeddedEntityBlock","toggleHeadingMenu","closeHeadingMenu","canReadAssets","isAnyHyperlinkEnabled","isAnyListEnabled","isAnyMarkEnabled","getIn","EditorToolbar","isToggleActive","EditorToolbarDivider","Quote","nativeSticky","StickyToolbarWrapper","STYLE_EDITOR_BORDER","borderTop","minHeight","overflowWrap","webkitUserModify","cursor","hiddenToolbar","enabled","createSlateValue","contentfulDocument","toSlatejsDocument","Value","fromJSON","BasicEditor","EMPTY_SLATE_DOCUMENT","EMPTY_DOCUMENT","ConnectedRichTextEditor","lastOperations","List","DOCUMENT","createRef","slatePlugins","operations","isRelevantOperation","callOnChange","debounce","doc","toContentfulDocument","handleKeyDown","keyCode","currentTarget","shouldComponentUpdate","nextProps","nextState","is","prevProps","isDocumentChanged","deepEquals","isToolbarHidden","current","Editor","plugins","options","op","properties","RichTextEditor","isInitiallyDisabled","otherProps","FieldConnector","isEmptyValue","isEqualValues","value1","value2","setValue","externalReset","lastRemoteValue","ModalDialogLauncher","openDialog","invocation","startAutoResizer","close"],"mappings":"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"}